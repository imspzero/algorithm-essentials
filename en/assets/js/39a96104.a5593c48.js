"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[6597],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294),i=n(6010);const a="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.Z)(a,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(7462),i=n(7294),a=n(6010),l=n(2389),o=n(7392),s=n(7094),u=n(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:n,block:l,defaultValue:m,values:d,groupId:f,className:b}=e,v=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=d??v.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),h=(0,o.l)(g,((e,t)=>e.value===t.value));if(h.length>0)throw new Error(`Docusaurus error: Duplicate values "${h.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const x=null===m?m:m??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==x&&!g.some((e=>e.value===x)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${x}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:y}=(0,s.U)(),[j,w]=(0,i.useState)(x),O=[],{blockElementScrollPositionUntilNextRender:N}=(0,u.o5)();if(null!=f){const e=k[f];null!=e&&e!==j&&g.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,n=O.indexOf(t),r=g[n].value;r!==j&&(N(t),w(r),null!=f&&y(f,String(r)))},X=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=O.indexOf(e.currentTarget)+1;n=O[t]??O[0];break}case"ArrowLeft":{const t=O.indexOf(e.currentTarget)-1;n=O[t]??O[O.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,a.Z)("tabs-container",c)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":l},b)},g.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,r.Z)({role:"tab",tabIndex:j===t?0:-1,"aria-selected":j===t,key:t,ref:e=>O.push(e),onKeyDown:X,onFocus:T,onClick:T},l,{className:(0,a.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":j===t})}),n??t)}))),n?(0,i.cloneElement)(v.filter((e=>e.props.value===j))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==j})))))}function d(e){const t=(0,l.Z)();return i.createElement(m,(0,r.Z)({key:String(t)},e))}},6743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=n(7462),i=(n(7294),n(3905)),a=n(5488),l=n(5162);const o={title:"Spiral Matrix"},s=void 0,u={unversionedId:"simulation/spiral-matrix",id:"simulation/spiral-matrix",title:"Spiral Matrix",description:"\u63cf\u8ff0",source:"@site/docs/simulation/spiral-matrix.md",sourceDirName:"simulation",slug:"/simulation/spiral-matrix",permalink:"/en/simulation/spiral-matrix",draft:!1,tags:[],version:"current",frontMatter:{title:"Spiral Matrix"},sidebar:"docs",previous:{title:"Pascal's Triangle II",permalink:"/en/simulation/pascal-s-triangle-ii"},next:{title:"Spiral Matrix II",permalink:"/en/simulation/spiral-matrix-ii"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u89e3\u6cd5 1 \u8fed\u4ee3",id:"\u89e3\u6cd5-1-\u8fed\u4ee3",level:3},{value:"\u89e3\u6cd5 2 \u9012\u5f52",id:"\u89e3\u6cd5-2-\u9012\u5f52",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.kt)("p",null,"Given a matrix of ",(0,i.kt)("inlineCode",{parentName:"p"},"m \xd7 n")," elements (",(0,i.kt)("inlineCode",{parentName:"p"},"m")," rows, ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," columns), return all elements of the matrix in spiral order."),(0,i.kt)("p",null,"For example,\nGiven the following matrix:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n")),(0,i.kt)("p",null,"You should return ",(0,i.kt)("inlineCode",{parentName:"p"},"[1,2,3,6,9,8,7,4,5]"),"."),(0,i.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.kt)("p",null,"\u6a21\u62df\u3002"),(0,i.kt)("h3",{id:"\u89e3\u6cd5-1-\u8fed\u4ee3"},"\u89e3\u6cd5 1 \u8fed\u4ee3"),(0,i.kt)(a.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Spiral Matrix\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> result = new ArrayList<>();\n        if (matrix.length == 0) return result;\n        int beginX = 0, endX = matrix[0].length - 1;\n        int beginY = 0, endY = matrix.length - 1;\n        while (true) {\n            // From left to right\n            for (int j = beginX; j <= endX; ++j) result.add(matrix[beginY][j]);\n            if (++beginY > endY) break;\n            // From top to bottom\n            for (int i = beginY; i <= endY; ++i) result.add(matrix[i][endX]);\n            if (beginX > --endX) break;\n            // From right to left\n            for (int j = endX; j >= beginX; --j) result.add(matrix[endY][j]);\n            if (beginY > --endY) break;\n            // From bottom to top\n            for (int i = endY; i >= beginY; --i) result.add(matrix[i][beginX]);\n            if (++beginX > endX) break;\n        }\n        return result;\n    }\n}\n"))),(0,i.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"// LeetCode, Spiral Matrix\n// @author \u9f9a\u9646\u5b89 (http://weibo.com/luangong)\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int> >& matrix) {\n        vector<int> result;\n        if (matrix.empty()) return result;\n        int beginX = 0, endX = matrix[0].size() - 1;\n        int beginY = 0, endY = matrix.size() - 1;\n        while (true) {\n            // From left to right\n            for (int j = beginX; j <= endX; ++j) result.push_back(matrix[beginY][j]);\n            if (++beginY > endY) break;\n            // From top to bottom\n            for (int i = beginY; i <= endY; ++i) result.push_back(matrix[i][endX]);\n            if (beginX > --endX) break;\n            // From right to left\n            for (int j = endX; j >= beginX; --j) result.push_back(matrix[endY][j]);\n            if (beginY > --endY) break;\n            // From bottom to top\n            for (int i = endY; i >= beginY; --i) result.push_back(matrix[i][beginX]);\n            if (++beginX > endX) break;\n        }\n        return result;\n    }\n};\n")))),(0,i.kt)("h3",{id:"\u89e3\u6cd5-2-\u9012\u5f52"},"\u89e3\u6cd5 2 \u9012\u5f52"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Spiral Matrix\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        List<Integer> result = new ArrayList<>();\n        if (matrix.length == 0) return result;\n\n        left = 0;\n        right = matrix[0].length - 1;\n        up = 0;\n        down = matrix.length - 1;\n        dfs(matrix, 0, 0, 0, result);\n        return result;\n    }\n\n    private void dfs(int[][] matrix, int i, int j, int direction,\n                     List<Integer> result) {\n        if (i < up || i > down) return;\n        if (j < left || j > right) return;\n        result.add(matrix[i][j]);\n\n        int nextDirection = (direction + 1) % 4;\n        switch (direction) {\n            case 0:  // right\n                if (j < right) {\n                    dfs(matrix, i, j + 1, direction, result);\n                } else {\n                    ++up;\n                    dfs(matrix, i + 1, j, nextDirection, result);\n                }\n                break;\n            case 1:  // down\n                if (i < down) {\n                    dfs(matrix, i+1, j, direction, result);\n                } else {\n                    --right;\n                    dfs(matrix, i, j - 1, nextDirection, result);\n                }\n                break;\n            case 2:  // left\n                if (j > left) {\n                    dfs(matrix, i, j - 1, direction, result);\n                } else {\n                    --down;\n                    dfs(matrix, i - 1, j, nextDirection, result);\n                }\n                break;\n            default: // up\n                if (i > up) {\n                    dfs(matrix, i - 1, j, direction, result);\n                } else {\n                    ++left;\n                    dfs(matrix, i, j + 1, nextDirection, result);\n                }\n        }\n\n    }\n\n    private int left;\n    private int right;\n    private int up;\n    private int down;\n}\n")),(0,i.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/en/simulation/spiral-matrix-ii"},"Spiral Matrix II"))))}d.isMDXComponent=!0}}]);
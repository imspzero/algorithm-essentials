"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9703],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=i,m=d["".concat(s,".").concat(f)]||d[f]||c[f]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},38:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={title:"Reverse Bits"},o=void 0,l={unversionedId:"bitwise-operations/reverse-bits",id:"bitwise-operations/reverse-bits",title:"Reverse Bits",description:"\u63cf\u8ff0",source:"@site/docs/bitwise-operations/reverse-bits.md",sourceDirName:"bitwise-operations",slug:"/bitwise-operations/reverse-bits",permalink:"/en/bitwise-operations/reverse-bits",draft:!1,tags:[],version:"current",frontMatter:{title:"Reverse Bits"},sidebar:"docs",previous:{title:"Decode String",permalink:"/en/string/decode-string"},next:{title:"Repeated DNA Sequences",permalink:"/en/bitwise-operations/repeated-dna-sequences"}},s={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u89e3\u6cd5 1",id:"\u89e3\u6cd5-1",level:3},{value:"\u89e3\u6cd5 2",id:"\u89e3\u6cd5-2",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.kt)("p",null,"Reverse bits of a given 32 bits unsigned integer."),(0,i.kt)("p",null,"For example, given input ",(0,i.kt)("inlineCode",{parentName:"p"},"43261596")," (represented in binary as ",(0,i.kt)("inlineCode",{parentName:"p"},"00000010100101000001111010011100"),"), return ",(0,i.kt)("inlineCode",{parentName:"p"},"964176192")," (represented in binary as ",(0,i.kt)("inlineCode",{parentName:"p"},"00111001011110000010100101000000"),")."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Follow up"),": If this function is called many times, how would you optimize it?"),(0,i.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.kt)("p",null,"\u6700\u7b80\u5355\u76f4\u63a5\u7684\u505a\u6cd5\uff0c\u4ece\u53f3\u5411\u5de6\u628a\u4e00\u4f4d\u4f4d\u53d6\u51fa\u6765\uff0c\u6dfb\u52a0\u5230\u65b0\u751f\u6210\u7684\u6574\u6570\u7684\u6700\u4f4e\u4f4d\u5373\u53ef\u3002"),(0,i.kt)("p",null,"\u7b2c\u4e8c\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u5de6\u53f3\u4e0d\u65ad\u4ea4\u6362\u4f4d\uff0c\u76f4\u5230\u76f8\u9047\u3002"),(0,i.kt)("h3",{id:"\u89e3\u6cd5-1"},"\u89e3\u6cd5 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Reverse Bits\n// Time Complexity: O(logn), Space Complexity: O(1)\npublic class Solution {\n    // you need treat n as an unsigned value\n    public int reverseBits(int n) {\n        int result = 0;\n        for (int i = 0; i < 32; ++i) {\n            if ((n & 1) == 1) {\n                result = (result << 1) + 1;\n            } else {\n                result = result << 1;\n            }\n            n = n >> 1;\n        }\n        return result;\n    }\n}\n")),(0,i.kt)("h3",{id:"\u89e3\u6cd5-2"},"\u89e3\u6cd5 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Reverse Bits\n// Time Complexity: O(logn), Space Complexity: O(1)\npublic class Solution {\n    // you need treat n as an unsigned value\n    public int reverseBits(int n) {\n        int left = 0;\n        int right = 31;\n        while (left < right) {\n            // swap bit\n            int x = (n >> left) & 1;\n            int y = (n >> right) & 1;\n\n            if (x != y) {\n                n ^= (1 << left) | (1 << right);\n            }\n            ++left;\n            --right;\n        }\n        return n;\n    }\n}\n")))}c.isMDXComponent=!0}}]);
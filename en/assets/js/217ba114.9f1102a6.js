"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3866],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),f=i,b=m["".concat(u,".").concat(f)]||m[f]||c[f]||o;return n?r.createElement(b,a(a({ref:t},p),{},{components:n})):r.createElement(b,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3454:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={title:"Number of 1 Bits"},a=void 0,l={unversionedId:"bitwise-operations/number-of-1-bits",id:"bitwise-operations/number-of-1-bits",title:"Number of 1 Bits",description:"\u63cf\u8ff0",source:"@site/docs/bitwise-operations/number-of-1-bits.md",sourceDirName:"bitwise-operations",slug:"/bitwise-operations/number-of-1-bits",permalink:"/en/bitwise-operations/number-of-1-bits",draft:!1,tags:[],version:"current",frontMatter:{title:"Number of 1 Bits"},sidebar:"docs",previous:{title:"Repeated DNA Sequences",permalink:"/en/bitwise-operations/repeated-dna-sequences"},next:{title:"Gray Code",permalink:"/en/bitwise-operations/gray-code"}},u={},s=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u89e3\u6cd5 1",id:"\u89e3\u6cd5-1",level:3},{value:"\u89e3\u6cd5 2",id:"\u89e3\u6cd5-2",level:3}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.kt)("p",null,"Write a function that takes an unsigned integer and returns the number of \u20191' bits it has (also known as the Hamming weight)."),(0,i.kt)("p",null,"For example, the 32-bit integer ",(0,i.kt)("inlineCode",{parentName:"p"},"11")," has binary representation ",(0,i.kt)("inlineCode",{parentName:"p"},"00000000000000000000000000001011"),", so the function should return 3."),(0,i.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.kt)("p",null,"\u6700\u76f4\u63a5\u7684\u65b9\u6cd5\uff0c\u505a 32 \u6b21\u53f3\u79fb\uff0c\u7edf\u8ba1\u51fa 1 \u7684\u4e2a\u6570\u3002"),(0,i.kt)("p",null,'\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u6765\u81ea "Hacker\'s Delight" \u8fd9\u672c\u4e66\u3002'),(0,i.kt)("p",null,"\u4f7f\u7528 Java \u89e3\u9898\u65f6\uff0c\u9700\u8981\u6ce8\u610f\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u8f93\u5165\u503c n \u53ef\u80fd\u4e3a\u8d1f\u6570\uff0c\u4f46\u5e94\u89c6\u5176\u4e3a\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u56e0\u4e3a Java \u4e2d\u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u65e0\u7b26\u53f7\u6574\u6570\u7684"),(0,i.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u65e0\u7b26\u53f7\u53f3\u79fb\u64cd\u4f5c\u7b26",(0,i.kt)("inlineCode",{parentName:"li"},">>>"),"\uff0c\u53ef\u4ee5\u5ffd\u7565\u7b26\u53f7\u4f4d")),(0,i.kt)("h3",{id:"\u89e3\u6cd5-1"},"\u89e3\u6cd5 1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Number of 1 Bits\n// Time Complexity: O(32), Space Complexity: O(1)\npublic class Solution {\n    // you need to treat n as an unsigned value\n    public int hammingWeight(int n) {\n        int count = 0;\n        for (int i = 0; i < 32; ++i) {\n            count += n & 1;\n            n >>>= 1;\n        }\n        return count;\n    }\n}\n")),(0,i.kt)("h3",{id:"\u89e3\u6cd5-2"},"\u89e3\u6cd5 2"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Number of 1 Bits\n// Time Complexity: O(number of 1), Space Complexity: O(1)\npublic class Solution {\n    // you need to treat n as an unsigned value\n    public int hammingWeight(int n) {\n        int count = 0;\n        while (n != 0) {\n            ++count;\n            n &= n - 1;\n        }\n        return count;\n    }\n}\n")))}c.isMDXComponent=!0}}]);
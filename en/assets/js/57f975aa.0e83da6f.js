"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4531],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,h=m["".concat(u,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(h,l(l({ref:t},p),{},{components:n})):r.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294),a=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(7462),a=n(7294),o=n(6010),l=n(2389),i=n(7392),u=n(7094),s=n(2466);const p="tabList__CuJ",c="tabItem_LNqP";function m(e){var t;const{lazy:n,block:l,defaultValue:m,values:d,groupId:h,className:f}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=d??b.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,i.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===m?m:m??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==g&&!v.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:T,setTabGroupChoices:k}=(0,u.U)(),[N,O]=(0,a.useState)(g),w=[],{blockElementScrollPositionUntilNextRender:D}=(0,s.o5)();if(null!=h){const e=T[h];null!=e&&e!==N&&v.some((t=>t.value===e))&&O(e)}const j=e=>{const t=e.currentTarget,n=w.indexOf(t),r=v[n].value;r!==N&&(D(t),O(r),null!=h&&k(h,String(r)))},E=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":l},f)},v.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>w.push(e),onKeyDown:E,onFocus:j,onClick:j},l,{className:(0,o.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,a.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,l.Z)();return a.createElement(m,(0,r.Z)({key:String(t)},e))}},3464:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905)),o=n(5488),l=n(5162);const i={title:"Minimum Depth of Binary Tree"},u=void 0,s={unversionedId:"binary-tree/recursion/minimum-depth-of-binary-tree",id:"binary-tree/recursion/minimum-depth-of-binary-tree",title:"Minimum Depth of Binary Tree",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/recursion/minimum-depth-of-binary-tree.md",sourceDirName:"binary-tree/recursion",slug:"/binary-tree/recursion/minimum-depth-of-binary-tree",permalink:"/en/binary-tree/recursion/minimum-depth-of-binary-tree",draft:!1,tags:[],version:"current",frontMatter:{title:"Minimum Depth of Binary Tree"},sidebar:"docs",previous:{title:"\u7b80\u4ecb",permalink:"/en/binary-tree/recursion/"},next:{title:"Maximum Depth of Binary Tree",permalink:"/en/binary-tree/recursion/maximum-depth-of-binary-tree"}},p={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u9012\u5f52\u7248",id:"\u9012\u5f52\u7248",level:3},{value:"\u8fed\u4ee3\u7248",id:"\u8fed\u4ee3\u7248",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],m={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.kt)("p",null,"Given a binary tree, find its minimum depth."),(0,a.kt)("p",null,"The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node."),(0,a.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.kt)("p",null,"\u65e0"),(0,a.kt)("h3",{id:"\u9012\u5f52\u7248"},"\u9012\u5f52\u7248"),(0,a.kt)(o.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Minimum Depth of Binary Tree\n// \u9012\u5f52\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public int minDepth(TreeNode root) {\n        return minDepth(root, false);\n    }\n    private static int minDepth(TreeNode root, boolean hasbrother) {\n        if (root == null) return hasbrother ? Integer.MAX_VALUE : 0;\n\n        return 1 + Math.min(minDepth(root.left, root.right != null),\n                minDepth(root.right, root.left != null));\n    }\n}\n"))),(0,a.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Depth of Binary Tree\n// \u9012\u5f52\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    int minDepth(const TreeNode *root) {\n        return minDepth(root, false);\n    }\nprivate:\n    static int minDepth(const TreeNode *root, bool hasbrother) {\n        if (!root) return hasbrother ? INT_MAX : 0;\n\n        return 1 + min(minDepth(root->left, root->right != NULL),\n                minDepth(root->right, root->left != NULL));\n    }\n};\n")))),(0,a.kt)("h3",{id:"\u8fed\u4ee3\u7248"},"\u8fed\u4ee3\u7248"),(0,a.kt)(o.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Minimum Depth of Binary Tree\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public int minDepth(TreeNode root) {\n        if (root == null) return 0;\n\n        int result = Integer.MAX_VALUE;\n        Stack<Pair> s = new Stack<>();\n        s.push(new Pair(root, 1));\n\n        while (!s.empty()) {\n            final Pair p = s.pop();\n            TreeNode node = p.node;\n            int depth = p.depth;\n\n            if (node.left == null && node.right == null)\n                result = Math.min(result, depth);\n\n            if (node.left != null && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(new Pair(node.left, depth + 1));\n\n            if (node.right != null && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(new Pair(node.right, depth + 1));\n        }\n\n        return result;\n    }\n\n    static class Pair {\n        TreeNode node;\n        int depth;\n        public Pair(TreeNode node, int depth) {\n            this.node = node;\n            this.depth = depth;\n        }\n    }\n}\n"))),(0,a.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Depth of Binary Tree\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if (root == nullptr)\n            return 0;\n\n        int result = INT_MAX;\n\n        stack<pair<TreeNode*, int>> s;\n        s.push(make_pair(root, 1));\n\n        while (!s.empty()) {\n            auto node = s.top().first;\n            auto depth = s.top().second;\n            s.pop();\n\n            if (node->left == nullptr && node->right == nullptr)\n                result = min(result, depth);\n\n            if (node->left && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(make_pair(node->left, depth + 1));\n\n            if (node->right && result > depth) // \u6df1\u5ea6\u63a7\u5236\uff0c\u526a\u679d\n                s.push(make_pair(node->right, depth + 1));\n        }\n\n        return result;\n    }\n};\n")))),(0,a.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/en/binary-tree/recursion/maximum-depth-of-binary-tree"},"Maximum Depth of Binary Tree"))))}d.isMDXComponent=!0}}]);
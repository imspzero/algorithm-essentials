"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4905],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),o=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=o(e.components);return a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),h=o(t),d=r,m=h["".concat(c,".").concat(d)]||h[d]||u[d]||l;return t?a.createElement(m,i(i({ref:n},p),{},{components:t})):a.createElement(m,i({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=h;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var o=2;o<l;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var a=t(7294),r=t(6010);const l="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(7462),r=t(7294),l=t(6010),i=t(2389),s=t(7392),c=t(7094),o=t(2466);const p="tabList__CuJ",u="tabItem_LNqP";function h(e){var n,t;const{lazy:i,block:h,defaultValue:d,values:m,groupId:g,className:f}=e,v=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:v.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),k=(0,s.l)(b,((e,n)=>e.value===n.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const j=null===d?d:null!=(n=null!=d?d:null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)?n:v[0].props.value;if(null!==j&&!b.some((e=>e.value===j)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+j+'" but none of its children has the corresponding value. Available values are: '+b.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:w}=(0,c.U)(),[N,M]=(0,r.useState)(j),O=[],{blockElementScrollPositionUntilNextRender:T}=(0,o.o5)();if(null!=g){const e=y[g];null!=e&&e!==N&&b.some((n=>n.value===e))&&M(e)}const x=e=>{const n=e.currentTarget,t=O.indexOf(n),a=b[t].value;a!==N&&(T(n),M(a),null!=g&&w(g,String(a)))},C=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=O.indexOf(e.currentTarget)+1;t=null!=(a=O[n])?a:O[0];break}case"ArrowLeft":{var r;const n=O.indexOf(e.currentTarget)-1;t=null!=(r=O[n])?r:O[O.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",p)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":h},f)},b.map((e=>{let{value:n,label:t,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,key:n,ref:e=>O.push(e),onKeyDown:C,onFocus:x,onClick:x},i,{className:(0,l.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":N===n})}),null!=t?t:n)}))),i?(0,r.cloneElement)(v.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},v.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==N})))))}function d(e){const n=(0,i.Z)();return r.createElement(h,(0,a.Z)({key:String(n)},e))}},743:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var a=t(7462),r=(t(7294),t(3905)),l=t(5488),i=t(5162);const s={title:"Wildcard Matching"},c=void 0,o={unversionedId:"string/wildcard-matching",id:"string/wildcard-matching",title:"Wildcard Matching",description:"\u63cf\u8ff0",source:"@site/docs/string/wildcard-matching.md",sourceDirName:"string",slug:"/string/wildcard-matching",permalink:"/string/wildcard-matching",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/string/wildcard-matching.md",tags:[],version:"current",frontMatter:{title:"Wildcard Matching"},sidebar:"someSidebar",previous:{title:"Regular Expression Matching",permalink:"/string/regular-expression-matching"},next:{title:"Longest Common Prefix",permalink:"/string/longest-common-prefix"}},p={},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u9012\u5f52\u7248",id:"\u9012\u5f52\u7248",level:3},{value:"\u8fed\u4ee3\u7248",id:"\u8fed\u4ee3\u7248",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],h={toc:u};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Implement wildcard pattern matching with support for ",(0,r.kt)("inlineCode",{parentName:"p"},"'?'")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"'*'"),"."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"'?'")," Matches any single character.\n",(0,r.kt)("inlineCode",{parentName:"p"},"'*'")," Matches any sequence of characters (including the empty sequence)."),(0,r.kt)("p",null,"The matching should cover the entire input string (not partial)."),(0,r.kt)("p",null,"The function prototype should be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"bool isMatch(const char *s, const char *p)\n")),(0,r.kt)("p",null,"Some examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'isMatch("aa","a") \u2192 false\nisMatch("aa","aa") \u2192 true\nisMatch("aaa","aa") \u2192 false\nisMatch("aa", "*") \u2192 true\nisMatch("aa", "a*") \u2192 true\nisMatch("ab", "?*") \u2192 true\nisMatch("aab", "c*a*b") \u2192 false\n')),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,"\u8ddf\u4e0a\u4e00\u9898\u5f88\u7c7b\u4f3c\u3002"),(0,r.kt)("p",null,"\u4e3b\u8981\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"'*'"),"\u7684\u5339\u914d\u95ee\u9898\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"p"),"\u6bcf\u9047\u5230\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"'*'"),"\uff0c\u5c31\u4fdd\u7559\u4f4f\u5f53\u524d",(0,r.kt)("inlineCode",{parentName:"p"},"'*'"),"\u7684\u5750\u6807\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u7684\u5750\u6807\uff0c\u7136\u540e",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"\u4ece\u524d\u5f80\u540e\u626b\u63cf\uff0c\u5982\u679c\u4e0d\u6210\u529f\uff0c\u5219",(0,r.kt)("inlineCode",{parentName:"p"},"s++"),"\uff0c\u91cd\u65b0\u626b\u63cf\u3002"),(0,r.kt)("h3",{id:"\u9012\u5f52\u7248"},"\u9012\u5f52\u7248"),(0,r.kt)(l.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Wildcard Matching\n// \u9012\u5f52\u7248\uff0c\u4f1a\u8d85\u65f6\uff0c\u7528\u4e8e\u5e2e\u52a9\u7406\u89e3\u9898\u610f\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*m!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n    public boolean isMatch(String s, String p) {\n        return isMatch(s, 0, p, 0);\n    }\n    private boolean isMatch(String s, int i, String p, int j) {\n        if (i == s.length() && j == p.length()) return true;\n        if (i == s.length() || j == p.length()) return false;\n\n        if (p.charAt(j) == '*') {\n            while (j < p.length() && p.charAt(j) == '*') ++j;  //skip continuous '*'\n            if (j == p.length()) return true;\n            while (i < s.length() && !isMatch(s, i, p, j)) ++i;\n\n            return i < s.length();\n        }\n        else if (p.charAt(j) == s.charAt(i) || p.charAt(j) == '?')\n            return isMatch(s, ++i, p, ++j);\n        else return false;\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Wildcard Matching\n// \u9012\u5f52\u7248\uff0c\u4f1a\u8d85\u65f6\uff0c\u7528\u4e8e\u5e2e\u52a9\u7406\u89e3\u9898\u610f\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!*m!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    bool isMatch(const string& s, const string& p) {\n        return isMatch(s.c_str(), p.c_str());\n    }\nprivate:\n    bool isMatch(const char *s, const char *p) {\n        if (*p == '\\0' || *s == '\\0') return *p == *s;\n        else if (*p == '*') {\n            while (*p == '*') ++p;  //skip continuous '*'\n            if (*p == '\\0') return true;\n            while (*s != '\\0' && !isMatch(s, p)) ++s;\n\n            return *s != '\\0';\n        }\n        else if (*p == *s || *p == '?') return isMatch(++s, ++p);\n        else return false;\n    }\n};\n")))),(0,r.kt)("h3",{id:"\u8fed\u4ee3\u7248"},"\u8fed\u4ee3\u7248"),(0,r.kt)(l.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Wildcard Matching\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public boolean isMatch(String s, String p) {\n        int i = 0, j = 0;\n        int ii = -1, jj = -1;\n        while (i < s.length()) {\n            if (j < p.length() && p.charAt(j) == '*') {\n                // skip continuous '*'\n                while (j < p.length() && p.charAt(j) == '*') ++j;\n                if (j == p.length()) return true;\n                ii = i;\n                jj = j;\n            }\n            if (j < p.length() && (p.charAt(j) == '?' || p.charAt(j) == s.charAt(i))) {\n                ++i; ++j;\n            } else {\n                if (ii == -1) return false;\n                ++ii;\n                i = ii;\n                j = jj;\n            }\n        }\n        // skip continuous '*'\n        while (j < p.length() && p.charAt(j) == '*') ++j;\n        return i == s.length() && j == p.length();\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Wildcard Matching\n// \u8fed\u4ee3\u7248\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n*m)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    bool isMatch(const string& s, const string& p) {\n        return isMatch(s.c_str(), p.c_str());\n    }\nprivate:\n    bool isMatch(const char *s, const char *p) {\n        bool star = false;\n        const char *str, *ptr;\n        for (str = s, ptr = p; *str != '\\0'; str++, ptr++) {\n            switch (*ptr) {\n            case '?':\n                break;\n            case '*':\n                star = true;\n                s = str, p = ptr;\n                while (*p == '*') p++;  //skip continuous '*'\n                if (*p == '\\0') return true;\n                str = s - 1;\n                ptr = p - 1;\n                break;\n            default:\n                if (*str != *ptr) {\n                    // \u5982\u679c\u524d\u9762\u6ca1\u6709'*'\uff0c\u5219\u5339\u914d\u4e0d\u6210\u529f\n                    if (!star) return false;\n                    s++;\n                    str = s - 1;\n                    ptr = p - 1;\n                }\n            }\n        }\n        while (*ptr == '*') ptr++;\n        return (*ptr == '\\0');\n    }\n};\n")))),(0,r.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/string/regular-expression-matching"},"Regular Expression Matching"))))}d.isMDXComponent=!0}}]);
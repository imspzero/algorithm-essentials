"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[8880],{3905:(e,t,n)=>{n.d(t,{Zo:()=>o,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},o=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,o=m(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,h=c["".concat(i,".").concat(k)]||c[k]||u[k]||l;return n?a.createElement(h,s(s({ref:t},o),{},{components:n})):a.createElement(h,s({ref:t},o))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=c;var m={};for(var i in t)hasOwnProperty.call(t,i)&&(m[i]=t[i]);m.originalType=e,m.mdxType="string"==typeof e?e:r,s[1]=m;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(7462),r=n(7294),l=n(6010),s=n(2389),m=n(7392),i=n(7094),p=n(2466);const o="tabList__CuJ",u="tabItem_LNqP";function c(e){var t,n;const{lazy:s,block:c,defaultValue:k,values:h,groupId:N,className:g}=e,d=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=h?h:d.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,m.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const b=null===k?k:null!=(t=null!=k?k:null==(n=d.find((e=>e.props.default)))?void 0:n.props.value)?t:d[0].props.value;if(null!==b&&!f.some((e=>e.value===b)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:w}=(0,i.U)(),[S,O]=(0,r.useState)(b),x=[],{blockElementScrollPositionUntilNextRender:T}=(0,p.o5)();if(null!=N){const e=y[N];null!=e&&e!==S&&f.some((t=>t.value===e))&&O(e)}const E=e=>{const t=e.currentTarget,n=x.indexOf(t),a=f[n].value;a!==S&&(T(t),O(a),null!=N&&w(N,String(a)))},C=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=x.indexOf(e.currentTarget)+1;n=null!=(a=x[t])?a:x[0];break}case"ArrowLeft":{var r;const t=x.indexOf(e.currentTarget)-1;n=null!=(r=x[t])?r:x[x.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",o)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":c},g)},f.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:e=>x.push(e),onKeyDown:C,onFocus:E,onClick:E},s,{className:(0,l.Z)("tabs__item",u,null==s?void 0:s.className,{"tabs__item--active":S===t})}),null!=n?n:t)}))),s?(0,r.cloneElement)(d.filter((e=>e.props.value===S))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},d.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==S})))))}function k(e){const t=(0,s.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},781:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>k,frontMatter:()=>m,metadata:()=>p,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),s=n(5162);const m={title:"3Sum Smaller"},i=void 0,p={unversionedId:"linear-list/array/3sum-smaller",id:"linear-list/array/3sum-smaller",title:"3Sum Smaller",description:"\u63cf\u8ff0",source:"@site/docs/linear-list/array/3sum-smaller.md",sourceDirName:"linear-list/array",slug:"/linear-list/array/3sum-smaller",permalink:"/linear-list/array/3sum-smaller",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/linear-list/array/3sum-smaller.md",tags:[],version:"current",frontMatter:{title:"3Sum Smaller"},sidebar:"someSidebar",previous:{title:"3Sum Closest",permalink:"/linear-list/array/3sum-closest"},next:{title:"4Sum",permalink:"/linear-list/array/4sum"}},o={},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],c={toc:u};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Given an array of n integers ",(0,r.kt)("inlineCode",{parentName:"p"},"nums")," and an integer target, find the number of index triplets ",(0,r.kt)("inlineCode",{parentName:"p"},"i, j, k")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"0 <= i < j < k < n")," that satisfy the condition ",(0,r.kt)("inlineCode",{parentName:"p"},"nums[i] + nums[j] + nums[k] < target"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Follow up"),": Could you solve it in O(",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"n"),(0,r.kt)("mn",{parentName:"msup"},"2"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"n^2")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))))))),") runtime?"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Input"),": nums = ","[-2,0,1,3]",", target = 2"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Output"),": 2"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Explanation"),": Because there are two triplets which sums are less than 2:"),(0,r.kt)("p",{parentName:"blockquote"},"[-2,0,1]"),(0,r.kt)("p",{parentName:"blockquote"},"[-2,0,3]")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 2"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Input"),": nums = [], target = 0"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Output"),": 0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 3"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Input"),": nums = ","[0]",", target = 0"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Output"),": 0")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"n == nums.length"),(0,r.kt)("li",{parentName:"ul"},"0 <= n <= 300"),(0,r.kt)("li",{parentName:"ul"},"-100 <= nums","[i]"," <= 100"),(0,r.kt)("li",{parentName:"ul"},"-100 <= target <= 100")),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,"\u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\uff0c\u590d\u6742\u5ea6 ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"n"),(0,r.kt)("mn",{parentName:"msup"},"2")),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n^2)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"2")))))))),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))),"\u3002"),(0,r.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.kt)(l.Z,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# 3Sum Smaller\n# \u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\n# Time Complexity: O(n^2)\n# Space Complexity: from O(logn) to O(n), depending on the\n# implementation of the sorting algorithm\nclass Solution:\n    def threeSumSmaller(self, nums: List[int], target: int) -> int:\n        nums.sort()\n        count = 0\n        for i in range(len(nums)-2):\n            count += self.twoSumSmaller(nums, i, target - nums[i])\n        return count\n\n    def twoSumSmaller(self, nums: List[int], i: int, target: int) -> int:\n        count = 0\n        left, right = i + 1, len(nums) - 1\n        while left < right:\n            if nums[left] + nums[right] < target:\n                count += right - left\n                left += 1\n            else:\n                right -= 1\n        return count\n"))),(0,r.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// 3Sum Smaller\n// \u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\n// Time Complexity: O(n^2)\n// Space Complexity: from O(logn) to O(n), depending on the\n// implementation of the sorting algorithm\nclass Solution {\n    public int threeSumSmaller(int[] nums, int target) {\n        if(nums.length < 3) return 0;\n        Arrays.sort(nums);\n        int count = 0;\n        for (int i = 0; i < nums.length - 2; i++) {\n            count += twoSumSmaller(nums, i, target - nums[i]);\n        }\n        return count;\n    }\n\n    private int twoSumSmaller(int[] nums, int i, int target) {\n        int count = 0;\n        int left = i + 1, right = nums.length - 1;\n        while (left < right) {\n            if (nums[left] + nums[right] < target) {\n                count += right - left;\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n}\n"))),(0,r.kt)(s.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// 3Sum Smaller\n// \u5148\u6392\u5e8f\uff0c\u7136\u540e\u53cc\u6307\u9488\u5de6\u53f3\u5939\u903c\n// Time Complexity: O(n^2)\n// Space Complexity: from O(logn) to O(n), depending on the\n// implementation of the sorting algorithm\nclass Solution {\npublic:\n    int threeSumSmaller(vector<int>& nums, int target) {\n        if(nums.size() < 3) return 0;\n        sort(nums.begin(), nums.end());\n        int count = 0;\n        for (int i = 0; i < nums.size() - 2; i++) {\n            count += twoSumSmaller(nums, i, target - nums[i]);\n        }\n        return count;\n    }\nprivate:\n    int twoSumSmaller(const vector<int>& nums, int i, int target) {\n        int count = 0;\n        int left = i + 1, right = nums.size() - 1;\n        while (left < right) {\n            if (nums[left] + nums[right] < target) {\n                count += right - left;\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n};\n")))),(0,r.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/linear-list/array/2sum"},"2Sum")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/linear-list/array/2sum-ii"},"2Sum II")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/linear-list/array/3sum"},"3Sum")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/linear-list/array/4sum"},"4Sum")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/linear-list/array/4sum-ii"},"4Sum II"))))}k.isMDXComponent=!0}}]);
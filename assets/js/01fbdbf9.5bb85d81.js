"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[2265],{3905:(a,e,t)=>{t.d(e,{Zo:()=>o,kt:()=>N});var n=t(7294);function s(a,e,t){return e in a?Object.defineProperty(a,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):a[e]=t,a}function m(a,e){var t=Object.keys(a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(a);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable}))),t.push.apply(t,n)}return t}function r(a){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?m(Object(t),!0).forEach((function(e){s(a,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(t,e))}))}return a}function p(a,e){if(null==a)return{};var t,n,s=function(a,e){if(null==a)return{};var t,n,s={},m=Object.keys(a);for(n=0;n<m.length;n++)t=m[n],e.indexOf(t)>=0||(s[t]=a[t]);return s}(a,e);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(a);for(n=0;n<m.length;n++)t=m[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(a,t)&&(s[t]=a[t])}return s}var i=n.createContext({}),l=function(a){var e=n.useContext(i),t=e;return a&&(t="function"==typeof a?a(e):r(r({},e),a)),t},o=function(a){var e=l(a.components);return n.createElement(i.Provider,{value:e},a.children)},c={inlineCode:"code",wrapper:function(a){var e=a.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(a,e){var t=a.components,s=a.mdxType,m=a.originalType,i=a.parentName,o=p(a,["components","mdxType","originalType","parentName"]),u=l(t),N=s,k=u["".concat(i,".").concat(N)]||u[N]||c[N]||m;return t?n.createElement(k,r(r({ref:e},o),{},{components:t})):n.createElement(k,r({ref:e},o))}));function N(a,e){var t=arguments,s=e&&e.mdxType;if("string"==typeof a||s){var m=t.length,r=new Array(m);r[0]=u;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=a,p.mdxType="string"==typeof a?a:s,r[1]=p;for(var l=2;l<m;l++)r[l]=t[l];return n.createElement.apply(null,r)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5162:(a,e,t)=>{t.d(e,{Z:()=>r});var n=t(7294),s=t(6010);const m="tabItem_Ymn6";function r(a){let{children:e,hidden:t,className:r}=a;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(m,r),hidden:t},e)}},5488:(a,e,t)=>{t.d(e,{Z:()=>N});var n=t(7462),s=t(7294),m=t(6010),r=t(2389),p=t(7392),i=t(7094),l=t(2466);const o="tabList__CuJ",c="tabItem_LNqP";function u(a){var e,t;const{lazy:r,block:u,defaultValue:N,values:k,groupId:h,className:d}=a,g=s.Children.map(a.children,(a=>{if((0,s.isValidElement)(a)&&"value"in a.props)return a;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof a.type?a.type:a.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=k?k:g.map((a=>{let{props:{value:e,label:t,attributes:n}}=a;return{value:e,label:t,attributes:n}})),b=(0,p.l)(v,((a,e)=>a.value===e.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((a=>a.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const f=null===N?N:null!=(e=null!=N?N:null==(t=g.find((a=>a.props.default)))?void 0:t.props.value)?e:g[0].props.value;if(null!==f&&!v.some((a=>a.value===f)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+f+'" but none of its children has the corresponding value. Available values are: '+v.map((a=>a.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:y,setTabGroupChoices:w}=(0,i.U)(),[O,C]=(0,s.useState)(f),I=[],{blockElementScrollPositionUntilNextRender:x}=(0,l.o5)();if(null!=h){const a=y[h];null!=a&&a!==O&&v.some((e=>e.value===a))&&C(a)}const T=a=>{const e=a.currentTarget,t=I.indexOf(e),n=v[t].value;n!==O&&(x(e),C(n),null!=h&&w(h,String(n)))},E=a=>{var e;let t=null;switch(a.key){case"ArrowRight":{var n;const e=I.indexOf(a.currentTarget)+1;t=null!=(n=I[e])?n:I[0];break}case"ArrowLeft":{var s;const e=I.indexOf(a.currentTarget)-1;t=null!=(s=I[e])?s:I[I.length-1];break}}null==(e=t)||e.focus()};return s.createElement("div",{className:(0,m.Z)("tabs-container",o)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":u},d)},v.map((a=>{let{value:e,label:t,attributes:r}=a;return s.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===e?0:-1,"aria-selected":O===e,key:e,ref:a=>I.push(a),onKeyDown:E,onFocus:T,onClick:T},r,{className:(0,m.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":O===e})}),null!=t?t:e)}))),r?(0,s.cloneElement)(g.filter((a=>a.props.value===O))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},g.map(((a,e)=>(0,s.cloneElement)(a,{key:e,hidden:a.props.value!==O})))))}function N(a){const e=(0,r.Z)();return s.createElement(u,(0,n.Z)({key:String(e)},a))}},5495:(a,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>N,frontMatter:()=>p,metadata:()=>l,toc:()=>c});var n=t(7462),s=(t(7294),t(3905)),m=t(5488),r=t(5162);const p={title:"Combination Sum II"},i=void 0,l={unversionedId:"dfs/combination-sum-ii",id:"dfs/combination-sum-ii",title:"Combination Sum II",description:"\u63cf\u8ff0",source:"@site/docs/dfs/combination-sum-ii.md",sourceDirName:"dfs",slug:"/dfs/combination-sum-ii",permalink:"/dfs/combination-sum-ii",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dfs/combination-sum-ii.md",tags:[],version:"current",frontMatter:{title:"Combination Sum II"},sidebar:"someSidebar",previous:{title:"Combination Sum",permalink:"/dfs/combination-sum"},next:{title:"Combination Sum III",permalink:"/dfs/combination-sum-iii"}},o={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],u={toc:c};function N(a){let{components:e,...t}=a;return(0,s.kt)("wrapper",(0,n.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"Given a collection of candidate numbers (",(0,s.kt)("inlineCode",{parentName:"p"},"C"),") and a target number (",(0,s.kt)("inlineCode",{parentName:"p"},"T"),"), find all unique combinations in ",(0,s.kt)("inlineCode",{parentName:"p"},"C")," where the candidate numbers sums to ",(0,s.kt)("inlineCode",{parentName:"p"},"T"),"."),(0,s.kt)("p",null,"Each number in ",(0,s.kt)("inlineCode",{parentName:"p"},"C")," may only be used ",(0,s.kt)("strong",{parentName:"p"},"once")," in the combination."),(0,s.kt)("p",null,"Note:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"All numbers (including target) will be positive integers."),(0,s.kt)("li",{parentName:"ul"},"Elements in a combination (",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"a"),(0,s.kt)("mn",{parentName:"msub"},"1")),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"a"),(0,s.kt)("mn",{parentName:"msub"},"2")),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"a"),(0,s.kt)("mi",{parentName:"msub"},"k"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a_1, a_2, ..., a_k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"..."),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3361em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))))))),") must be in non-descending order. (ie, ",(0,s.kt)("span",{parentName:"li",className:"math math-inline"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"a"),(0,s.kt)("mn",{parentName:"msub"},"1")),(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"a"),(0,s.kt)("mn",{parentName:"msub"},"2")),(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,s.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"."),(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("msub",{parentName:"mrow"},(0,s.kt)("mi",{parentName:"msub"},"a"),(0,s.kt)("mi",{parentName:"msub"},"k"))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"a_1 > a_2 > ... > a_k")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6891em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"1")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6891em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3011em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mtight"},"2")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5782em",verticalAlign:"-0.0391em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"..."),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"0.5806em",verticalAlign:"-0.15em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"a"),(0,s.kt)("span",{parentName:"span",className:"msupsub"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.3361em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.55em",marginLeft:"0em",marginRight:"0.05em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,s.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal mtight",style:{marginRight:"0.03148em"}},"k")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.15em"}},(0,s.kt)("span",{parentName:"span"})))))))))),")."),(0,s.kt)("li",{parentName:"ul"},"The solution set must not contain duplicate combinations.")),(0,s.kt)("p",null,"For example, given candidate set ",(0,s.kt)("inlineCode",{parentName:"p"},"10,1,2,7,6,1,5")," and target ",(0,s.kt)("inlineCode",{parentName:"p"},"8"),",\nA solution set is:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"[1, 7]\n[1, 2, 5]\n[2, 6]\n[1, 1, 6]\n")),(0,s.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,s.kt)("p",null,"\u65e0"),(0,s.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,s.kt)(m.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.kt)(r.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"// Combination Sum II\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public List<List<Integer>> combinationSum2(int[] nums, int target) {\n        Arrays.sort(nums); // \u8ddf\u7b2c 50 \u884c\u914d\u5408\uff0c\n        // \u786e\u4fdd\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u7528\u4e00\u6b21\n        List<List<Integer>> result = new ArrayList<>();\n        List<Integer> path = new ArrayList<>();\n        dfs(nums, path, result, target, 0);\n        return result;\n    }\n    // \u4f7f\u7528nums[start, nums.size())\u4e4b\u95f4\u7684\u5143\u7d20\uff0c\u80fd\u627e\u5230\u7684\u6240\u6709\u53ef\u884c\u89e3\n    private static void dfs(int[] nums, List<Integer> path,\n                            List<List<Integer>> result, int gap, int start) {\n        if (gap == 0) {  //  \u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u89e3\n            result.add(new ArrayList<>(path));\n            return;\n        }\n\n        int previous = -1;\n        for (int i = start; i < nums.length; i++) {\n            // \u5982\u679c\u4e0a\u4e00\u8f6e\u5faa\u73af\u5df2\u7ecf\u4f7f\u7528\u4e86nums[i]\uff0c\u5219\u672c\u6b21\u5faa\u73af\u5c31\u4e0d\u80fd\u518d\u9009nums[i]\uff0c\n            // \u786e\u4fddnums[i]\u6700\u591a\u53ea\u7528\u4e00\u6b21\n            if (previous == nums[i]) continue;\n\n            if (gap < nums[i]) return;  // \u526a\u679d\n\n            previous = nums[i];\n\n            path.add(nums[i]);\n            dfs(nums, path, result, gap - nums[i], i + 1);\n            path.remove(path.size() - 1);  // \u6062\u590d\u73af\u5883\n        }\n    }\n}\n"))),(0,s.kt)(r.Z,{value:"cpp",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"// Combination Sum II\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n!)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    vector<vector<int> > combinationSum2(vector<int> &nums, int target) {\n        sort(nums.begin(), nums.end()); // \u8ddf\u7b2c 50 \u884c\u914d\u5408\uff0c\n                                        // \u786e\u4fdd\u6bcf\u4e2a\u5143\u7d20\u6700\u591a\u53ea\u7528\u4e00\u6b21\n        vector<vector<int> > result;\n        vector<int> path;\n        dfs(nums, path, result, target, 0);\n        return result;\n    }\nprivate:\n    // \u4f7f\u7528nums[start, nums.size())\u4e4b\u95f4\u7684\u5143\u7d20\uff0c\u80fd\u627e\u5230\u7684\u6240\u6709\u53ef\u884c\u89e3\n    static void dfs(const vector<int> &nums, vector<int> &path,\n            vector<vector<int> > &result, int gap, int start) {\n        if (gap == 0) {  //  \u627e\u5230\u4e00\u4e2a\u5408\u6cd5\u89e3\n            result.push_back(path);\n            return;\n        }\n\n        int previous = -1;\n        for (size_t i = start; i < nums.size(); i++) {\n            // \u5982\u679c\u4e0a\u4e00\u8f6e\u5faa\u73af\u5df2\u7ecf\u4f7f\u7528\u4e86nums[i]\uff0c\u5219\u672c\u6b21\u5faa\u73af\u5c31\u4e0d\u80fd\u518d\u9009nums[i]\uff0c\n            // \u786e\u4fddnums[i]\u6700\u591a\u53ea\u7528\u4e00\u6b21\n            if (previous == nums[i]) continue;\n\n            if (gap < nums[i]) return;  // \u526a\u679d\n\n            previous = nums[i];\n\n            path.push_back(nums[i]);\n            dfs(nums, path, result, gap - nums[i], i + 1);\n            path.pop_back();  // \u6062\u590d\u73af\u5883\n        }\n    }\n};\n")))),(0,s.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/dfs/combination-sum"},"Combination Sum")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/dfs/combination-sum-iii"},"Combination Sum III"))))}N.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[1105],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>c});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=i.createContext({}),s=function(e){var n=i.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return i.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},k=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),k=s(t),c=r,d=k["".concat(p,".").concat(c)]||k[c]||u[c]||a;return t?i.createElement(d,l(l({ref:n},m),{},{components:t})):i.createElement(d,l({ref:n},m))}));function c(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=k;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=t[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}k.displayName="MDXCreateElement"},971:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=t(7462),r=(t(7294),t(3905));const a={title:"Kth Largest Element in an Array"},l=void 0,o={unversionedId:"sorting/quick-sort/kth-largest-element-in-an-array",id:"sorting/quick-sort/kth-largest-element-in-an-array",title:"Kth Largest Element in an Array",description:"\u63cf\u8ff0",source:"@site/docs/sorting/quick-sort/kth-largest-element-in-an-array.md",sourceDirName:"sorting/quick-sort",slug:"/sorting/quick-sort/kth-largest-element-in-an-array",permalink:"/sorting/quick-sort/kth-largest-element-in-an-array",draft:!1,tags:[],version:"current",frontMatter:{title:"Kth Largest Element in an Array"},sidebar:"docs",previous:{title:"Sort Colors",permalink:"/sorting/quick-sort/sort-colors"},next:{title:"\u7b80\u4ecb",permalink:"/sorting/bucket-sort/"}},p={},s=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u601d\u8def 4 partition",id:"\u601d\u8def-4-partition",level:3},{value:"\u601d\u8def 5 \u5c0f\u6839\u5806",id:"\u601d\u8def-5-\u5c0f\u6839\u5806",level:3}],m={toc:s};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,i.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Find the ",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"-th largest element in an unsorted array."),(0,r.kt)("p",null,"For example, given ",(0,r.kt)("inlineCode",{parentName:"p"},"[3,2,1,5,6,4]")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"k = 2"),", return 5."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note"),":"),(0,r.kt)("p",null,"You may assume ",(0,r.kt)("inlineCode",{parentName:"p"},"k")," is always valid, 1 \u2264 k \u2264 array's length."),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,"\u8fd9\u9898\u662f\u4e00\u9053\u5f88\u597d\u7684\u9762\u8bd5\u9898\u76ee\uff0c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9898\u76ee\u77ed\u5c0f\uff0c\u5f88\u5feb\u5c31\u80fd\u8bf4\u6e05\u9898\u610f"),(0,r.kt)("li",{parentName:"ul"},"\u6709\u5f88\u591a\u79cd\u89e3\u6cd5\u3002\u4ece\u7b80\u5355\u5230\u590d\u6742\u7684\u89e3\u6cd5\u90fd\u6709\uff0c\u68af\u5ea6\u5747\u5300\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u9700\u8981\u9884\u5148\u77e5\u9053\u7279\u6b8a\u9886\u57df\u77e5\u8bc6\u3002")),(0,r.kt)("p",null,"\u8fd9\u9898\u6709\u5f88\u591a\u601d\u8def\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u6309\u4ece\u5927\u5230\u5c0f\u5168\u6392\u5e8f\uff0c\u7136\u540e\u53d6\u7b2c",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"\u4e2a\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(nlogn)"),"\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(1)"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5229\u7528\u5806\u8fdb\u884c\u90e8\u5206\u6392\u5e8f\u3002\u7ef4\u62a4\u4e00\u4e2a\u5927\u6839\u5806\uff0c\u5c06\u6570\u7ec4\u5143\u7d20\u5168\u90e8\u538b\u5165\u5806\uff0c\u7136\u540e\u5f39\u51fa",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"\u6b21\uff0c\u7b2c",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"\u4e2a\u5c31\u662f\u7b54\u6848\u3002\u65f6\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(klogn)"),"\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(n)"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u9009\u62e9\u6392\u5e8f\uff0c\u7b2c",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"\u6b21\u9009\u62e9\u540e\u5373\u53ef\u5f97\u5230\u7b2c",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"\u5927\u7684\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(nk)"),"\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(1)"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5806\u6392\u5e8f\uff0c\u7ef4\u62a4\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"k"),"\u5927\u5c0f\u7684\u5c0f\u6839\u5806\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0e\u5806\u9876\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u6bd4\u5806\u9876\u5143\u7d20\u5927\uff0c\u5219\u5220\u9664\u5806\u9876\u5143\u7d20\u5e76\u6dfb\u52a0\u8be5\u5143\u7d20\uff0c\u5982\u679c\u6bd4\u5806\u9876\u5143\u7d20\u5c0f\uff0c\u5219\u4ec0\u4e48\u4e5f\u4e0d\u505a\uff0c\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u65f6\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(nlogk)"),"\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(k)"),"\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5229\u7528\u5feb\u901f\u6392\u5e8f\u4e2d\u7684 partition \u601d\u60f3\uff0c\u4ece\u6570\u7ec4\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5143\u7d20 x\uff0c\u628a\u6570\u7ec4\u5212\u5206\u4e3a\u524d\u540e\u4e24\u90e8\u5206",(0,r.kt)("inlineCode",{parentName:"p"},"sa"),"\u548c",(0,r.kt)("inlineCode",{parentName:"p"},"sb"),"\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"sa"),"\u4e2d\u7684\u5143\u7d20\u5c0f\u4e8e x\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"sb"),"\u4e2d\u7684\u5143\u7d20\u5927\u4e8e\u6216\u7b49\u4e8e x\u3002\u8fd9\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"sa"),"\u7684\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e",(0,r.kt)("inlineCode",{parentName:"li"},"k"),"\uff0c\u5219\u9012\u5f52\u6c42\u89e3",(0,r.kt)("inlineCode",{parentName:"li"},"sb"),"\u4e2d\u7684\u7b2c",(0,r.kt)("inlineCode",{parentName:"li"},"k-|sa|"),"\u5927\u7684\u5143\u7d20"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"sa"),"\u7684\u5143\u7d20\u4e2a\u6570\u5927\u4e8e\u6216\u7b49\u4e8e",(0,r.kt)("inlineCode",{parentName:"li"},"k"),"\uff0c\u5219\u9012\u5f52\u6c42\u89e3",(0,r.kt)("inlineCode",{parentName:"li"},"sa"),"\u4e2d\u7684\u7b2c",(0,r.kt)("inlineCode",{parentName:"li"},"k"),"\u5927\u7684\u5143\u7d20")),(0,r.kt)("p",{parentName:"li"},"\u65f6\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(n)"),"\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6",(0,r.kt)("inlineCode",{parentName:"p"},"O(1)")))),(0,r.kt)("p",null,"\u601d\u8def 4 \u548c 5 \u6bd4\u8f83\u9ad8\u6548\uff0c\u53ef\u4ee5\u63a5\u53d7\uff0c\u5176\u4ed6\u601d\u8def\u592a\u6162\u4e86\uff0c\u4e0d\u91c7\u7eb3\u3002"),(0,r.kt)("h3",{id:"\u601d\u8def-4-partition"},"\u601d\u8def 4 partition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Kth Largest Element in an Array\n// Time complexity: O(nlogk), Space complexity: O(k)\npublic class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        final Queue<Integer> q = new PriorityQueue<>();\n\n        for (int x : nums) {\n            if (q.size() < k) {\n                q.offer(x);\n            } else {\n                final int top = q.peek();\n                if (x > top) {\n                    q.poll();\n                    q.offer(x);\n                }\n            }\n        }\n        return q.peek();\n    }\n}\n")),(0,r.kt)("h3",{id:"\u601d\u8def-5-\u5c0f\u6839\u5806"},"\u601d\u8def 5 \u5c0f\u6839\u5806"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Kth Largest Element in an Array\n// Time complexity: O(n), Space complexity: O(1)\npublic class Solution {\n    public int findKthLargest(int[] nums, int k) {\n        quickSort(nums, 0, nums.length - 1);\n        return nums[nums.length - k];\n    }\n    private static int findKthLargest(int[] nums, int begin, int end, int k) {\n        if (begin + 1 == end && k == 1) return nums[0];\n\n        final int pos = partition(nums, begin, end - 1);\n        final int len = pos - begin;\n\n        if (len == k) {\n            return nums[pos-1];\n        } else if (len < k) {\n            return findKthLargest(nums, pos, end, k - len);\n        } else {\n            return findKthLargest(nums, begin, pos, k);\n        }\n    }\n    private static void quickSort(int[] nums, int left, int right) {\n        if (left < right) {\n            final int pos = partition(nums, left, right);\n            quickSort(nums, left, pos - 1);\n            quickSort(nums, pos + 1, right);\n        }\n    }\n    private static int partition(int[] nums, int i, int j) {\n        final int pivot = nums[i];\n        while (i < j) {\n            while (i < j && nums[j] >= pivot) --j;\n            nums[i] = nums[j];\n            while(i < j && nums[i] <= pivot) ++i;\n            nums[j] = nums[i];\n        }\n        nums[i] = pivot;\n        return i;\n    }\n}\n")))}u.isMDXComponent=!0}}]);
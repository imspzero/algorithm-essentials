"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[2066],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>d});var i=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function u(n,e){if(null==n)return{};var t,i,r=function(n,e){if(null==n)return{};var t,i,r={},a=Object.keys(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(i=0;i<a.length;i++)t=a[i],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var o=i.createContext({}),m=function(n){var e=i.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=m(n.components);return i.createElement(o.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return i.createElement(i.Fragment,{},e)}},c=i.forwardRef((function(n,e){var t=n.components,r=n.mdxType,a=n.originalType,o=n.parentName,s=u(n,["components","mdxType","originalType","parentName"]),c=m(t),d=r,f=c["".concat(o,".").concat(d)]||c[d]||p[d]||a;return t?i.createElement(f,l(l({ref:e},s),{},{components:t})):i.createElement(f,l({ref:e},s))}));function d(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var a=t.length,l=new Array(a);l[0]=c;var u={};for(var o in e)hasOwnProperty.call(e,o)&&(u[o]=e[o]);u.originalType=n,u.mdxType="string"==typeof n?n:r,l[1]=u;for(var m=2;m<a;m++)l[m]=t[m];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5162:(n,e,t)=>{t.d(e,{Z:()=>l});var i=t(7294),r=t(6010);const a="tabItem_Ymn6";function l(n){let{children:e,hidden:t,className:l}=n;return i.createElement("div",{role:"tabpanel",className:(0,r.Z)(a,l),hidden:t},e)}},5488:(n,e,t)=>{t.d(e,{Z:()=>d});var i=t(7462),r=t(7294),a=t(6010),l=t(2389),u=t(7392),o=t(7094),m=t(2466);const s="tabList__CuJ",p="tabItem_LNqP";function c(n){var e,t;const{lazy:l,block:c,defaultValue:d,values:f,groupId:v,className:g}=n,h=r.Children.map(n.children,(n=>{if((0,r.isValidElement)(n)&&"value"in n.props)return n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof n.type?n.type:n.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=f?f:h.map((n=>{let{props:{value:e,label:t,attributes:i}}=n;return{value:e,label:t,attributes:i}})),y=(0,u.l)(b,((n,e)=>n.value===e.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((n=>n.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const j=null===d?d:null!=(e=null!=d?d:null==(t=h.find((n=>n.props.default)))?void 0:t.props.value)?e:h[0].props.value;if(null!==j&&!b.some((n=>n.value===j)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+j+'" but none of its children has the corresponding value. Available values are: '+b.map((n=>n.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:x}=(0,o.U)(),[N,T]=(0,r.useState)(j),O=[],{blockElementScrollPositionUntilNextRender:w}=(0,m.o5)();if(null!=v){const n=k[v];null!=n&&n!==N&&b.some((e=>e.value===n))&&T(n)}const P=n=>{const e=n.currentTarget,t=O.indexOf(e),i=b[t].value;i!==N&&(w(e),T(i),null!=v&&x(v,String(i)))},S=n=>{var e;let t=null;switch(n.key){case"ArrowRight":{var i;const e=O.indexOf(n.currentTarget)+1;t=null!=(i=O[e])?i:O[0];break}case"ArrowLeft":{var r;const e=O.indexOf(n.currentTarget)-1;t=null!=(r=O[e])?r:O[O.length-1];break}}null==(e=t)||e.focus()};return r.createElement("div",{className:(0,a.Z)("tabs-container",s)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":c},g)},b.map((n=>{let{value:e,label:t,attributes:l}=n;return r.createElement("li",(0,i.Z)({role:"tab",tabIndex:N===e?0:-1,"aria-selected":N===e,key:e,ref:n=>O.push(n),onKeyDown:S,onFocus:P,onClick:P},l,{className:(0,a.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":N===e})}),null!=t?t:e)}))),l?(0,r.cloneElement)(h.filter((n=>n.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((n,e)=>(0,r.cloneElement)(n,{key:e,hidden:n.props.value!==N})))))}function d(n){const e=(0,l.Z)();return r.createElement(c,(0,i.Z)({key:String(e)},n))}},5076:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>u,metadata:()=>m,toc:()=>p});var i=t(7462),r=(t(7294),t(3905)),a=t(5488),l=t(5162);const u={title:"Minimum Path Sum"},o=void 0,m={unversionedId:"dp/minimum-path-sum",id:"dp/minimum-path-sum",title:"Minimum Path Sum",description:"\u63cf\u8ff0",source:"@site/docs/dp/minimum-path-sum.md",sourceDirName:"dp",slug:"/dp/minimum-path-sum",permalink:"/dp/minimum-path-sum",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dp/minimum-path-sum.md",tags:[],version:"current",frontMatter:{title:"Minimum Path Sum"},sidebar:"someSidebar",previous:{title:"Scramble String",permalink:"/dp/scramble-string"},next:{title:"Edit Distance",permalink:"/dp/edit-distance"}},s={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u5907\u5fd8\u5f55\u6cd5",id:"\u5907\u5fd8\u5f55\u6cd5",level:3},{value:"\u52a8\u89c4",id:"\u52a8\u89c4",level:3},{value:"\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4",id:"\u52a8\u89c4\u6eda\u52a8\u6570\u7ec4",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],c={toc:p};function d(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,i.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Given a ",(0,r.kt)("inlineCode",{parentName:"p"},"m \xd7 n")," grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path."),(0,r.kt)("p",null,"Note: You can only move either down or right at any point in time"),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,"\u8ddf\u7b2c ??? \u8282 ",(0,r.kt)("a",{parentName:"p",href:"/dfs/unique-paths"},"Unique Paths")," \u5f88\u7c7b\u4f3c\u3002"),(0,r.kt)("p",null,"\u8bbe\u72b6\u6001\u4e3a",(0,r.kt)("inlineCode",{parentName:"p"},"f[i][j]"),"\uff0c\u8868\u793a\u4ece\u8d77\u70b9",(0,r.kt)("inlineCode",{parentName:"p"},"(0,0)"),"\u5230\u8fbe",(0,r.kt)("inlineCode",{parentName:"p"},"(i,j)"),"\u7684\u6700\u5c0f\u8def\u5f84\u548c\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"f[i][j]=min(f[i-1][j], f[i][j-1])+grid[i][j]\n")),(0,r.kt)("h3",{id:"\u5907\u5fd8\u5f55\u6cd5"},"\u5907\u5fd8\u5f55\u6cd5"),(0,r.kt)(a.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Minimum Path Sum\n// \u5907\u5fd8\u5f55\u6cd5\npublic class Solution {\n    public int minPathSum(int[][] grid) {\n        final int m = grid.length;\n        final int n = grid[0].length;\n        this.f = new int[m][n];\n        for (int i = 0; i < m; ++i) Arrays.fill(f[i], -1);\n        return dfs(grid, m-1, n-1);\n    }\n\n    private int dfs(int[][] grid, int x, int y) {\n        if (x < 0 || y < 0) return Integer.MAX_VALUE; // \u8d8a\u754c\uff0c\u7ec8\u6b62\u6761\u4ef6\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n\n        if (x == 0 && y == 0) return grid[0][0]; // \u56de\u5230\u8d77\u70b9\uff0c\u6536\u655b\u6761\u4ef6\n\n        return Math.min(getOrUpdate(grid, x - 1, y),\n                getOrUpdate(grid, x, y - 1)) + grid[x][y];\n    }\n\n    private int getOrUpdate(int[][] grid, int x, int y) {\n        if (x < 0 || y < 0) return Integer.MAX_VALUE; // \u8d8a\u754c\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n        if (f[x][y] >= 0) return f[x][y];\n        else return f[x][y] = dfs(grid, x, y);\n    }\n    private int[][] f;  // \u7f13\u5b58\n}\n"))),(0,r.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Path Sum\n// \u5907\u5fd8\u5f55\u6cd5\nclass Solution {\npublic:\n    int minPathSum(vector<vector<int> > &grid) {\n        const int m = grid.size();\n        const int n = grid[0].size();\n        this->f = vector<vector<int> >(m, vector<int>(n, -1));\n        return dfs(grid, m-1, n-1);\n    }\nprivate:\n    vector<vector<int> > f;  // \u7f13\u5b58\n\n    int dfs(const vector<vector<int> > &grid, int x, int y) {\n        if (x < 0 || y < 0) return INT_MAX; // \u8d8a\u754c\uff0c\u7ec8\u6b62\u6761\u4ef6\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n\n        if (x == 0 && y == 0) return grid[0][0]; // \u56de\u5230\u8d77\u70b9\uff0c\u6536\u655b\u6761\u4ef6\n\n        return min(getOrUpdate(grid, x - 1, y),\n                getOrUpdate(grid, x, y - 1)) + grid[x][y];\n    }\n\n    int getOrUpdate(const vector<vector<int> > &grid, int x, int y) {\n        if (x < 0 || y < 0) return INT_MAX; // \u8d8a\u754c\uff0c\u6ce8\u610f\uff0c\u4e0d\u662f0\n        if (f[x][y] >= 0) return f[x][y];\n        else return f[x][y] = dfs(grid, x, y);\n    }\n};\n")))),(0,r.kt)("h3",{id:"\u52a8\u89c4"},"\u52a8\u89c4"),(0,r.kt)(a.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4\npublic class Solution {\n    public int minPathSum(int[][] grid) {\n        final int m = grid.length;\n        final int n = grid[0].length;\n        if (m == 0) return 0;\n\n        int[][] f = new int[m][n];\n        f[0][0] = grid[0][0];\n        for (int i = 1; i < m; i++) {\n            f[i][0] = f[i - 1][0] + grid[i][0];\n        }\n        for (int i = 1; i < n; i++) {\n            f[0][i] = f[0][i - 1] + grid[0][i];\n        }\n\n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j < n; j++) {\n                f[i][j] = Math.min(f[i - 1][j], f[i][j - 1]) + grid[i][j];\n            }\n        }\n        return f[m - 1][n - 1];\n    }\n}\n"))),(0,r.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4\nclass Solution {\npublic:\n    int minPathSum(vector<vector<int> > &grid) {\n        if (grid.size() == 0) return 0;\n        const int m = grid.size();\n        const int n = grid[0].size();\n\n        int f[m][n];\n        f[0][0] = grid[0][0];\n        for (int i = 1; i < m; i++) {\n            f[i][0] = f[i - 1][0] + grid[i][0];\n        }\n        for (int i = 1; i < n; i++) {\n            f[0][i] = f[0][i - 1] + grid[0][i];\n        }\n\n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j < n; j++) {\n                f[i][j] = min(f[i - 1][j], f[i][j - 1]) + grid[i][j];\n            }\n        }\n        return f[m - 1][n - 1];\n    }\n};\n")))),(0,r.kt)("h3",{id:"\u52a8\u89c4\u6eda\u52a8\u6570\u7ec4"},"\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4"),(0,r.kt)(a.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4\npublic class Solution {\n    public int minPathSum(int[][] grid) {\n        final int m = grid.length;\n        final int n = grid[0].length;\n\n        int[] f = new int[n];\n        Arrays.fill(f, Integer.MAX_VALUE); // \u521d\u59cb\u503c\u662f INT_MAX\uff0c\u56e0\u4e3a\u540e\u9762\u7528\u4e86min\u51fd\u6570\u3002\n        f[0] = 0;\n\n        for (int i = 0; i < m; i++) {\n            f[0] += grid[i][0];\n            for (int j = 1; j < n; j++) {\n                // \u5de6\u8fb9\u7684f[j]\uff0c\u8868\u793a\u66f4\u65b0\u540e\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i[[j]\u5bf9\u5e94\n                // \u53f3\u8fb9\u7684f[j]\uff0c\u8868\u793a\u8001\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i-1][j]\u5bf9\u5e94\n                f[j] = Math.min(f[j - 1], f[j]) + grid[i][j];\n            }\n        }\n        return f[n - 1];\n    }\n}\n"))),(0,r.kt)(l.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Minimum Path Sum\n// \u4e8c\u7ef4\u52a8\u89c4+\u6eda\u52a8\u6570\u7ec4\nclass Solution {\npublic:\n    int minPathSum(vector<vector<int> > &grid) {\n        const int m = grid.size();\n        const int n = grid[0].size();\n\n        int f[n];\n        fill(f, f+n, INT_MAX); // \u521d\u59cb\u503c\u662f INT_MAX\uff0c\u56e0\u4e3a\u540e\u9762\u7528\u4e86min\u51fd\u6570\u3002\n        f[0] = 0;\n\n        for (int i = 0; i < m; i++) {\n            f[0] += grid[i][0];\n            for (int j = 1; j < n; j++) {\n                // \u5de6\u8fb9\u7684f[j]\uff0c\u8868\u793a\u66f4\u65b0\u540e\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i[[j]\u5bf9\u5e94\n                // \u53f3\u8fb9\u7684f[j]\uff0c\u8868\u793a\u8001\u7684f[j]\uff0c\u4e0e\u516c\u5f0f\u4e2d\u7684f[i-1][j]\u5bf9\u5e94\n                f[j] = min(f[j - 1], f[j]) + grid[i][j];\n            }\n        }\n        return f[n - 1];\n    }\n};\n")))),(0,r.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dfs/unique-paths"},"Unique Paths")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/dfs/unique-paths-ii"},"Unique Paths II"))))}d.isMDXComponent=!0}}]);
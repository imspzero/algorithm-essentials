"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[6823],{3905:(e,a,n)=>{n.d(a,{Zo:()=>o,kt:()=>g});var t=n(7294);function s(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function m(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){s(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,s=function(e,a){if(null==e)return{};var n,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(s[n]=e[n]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var i=t.createContext({}),l=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):m(m({},a),e)),n},o=function(e){var a=l(e.components);return t.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},N=t.forwardRef((function(e,a){var n=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),N=l(n),g=s,k=N["".concat(i,".").concat(g)]||N[g]||c[g]||r;return n?t.createElement(k,m(m({ref:a},o),{},{components:n})):t.createElement(k,m({ref:a},o))}));function g(e,a){var n=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=n.length,m=new Array(r);m[0]=N;var p={};for(var i in a)hasOwnProperty.call(a,i)&&(p[i]=a[i]);p.originalType=e,p.mdxType="string"==typeof e?e:s,m[1]=p;for(var l=2;l<r;l++)m[l]=n[l];return t.createElement.apply(null,m)}return t.createElement.apply(null,n)}N.displayName="MDXCreateElement"},5162:(e,a,n)=>{n.d(a,{Z:()=>m});var t=n(7294),s=n(6010);const r="tabItem_Ymn6";function m(e){let{children:a,hidden:n,className:m}=e;return t.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,m),hidden:n},a)}},5488:(e,a,n)=>{n.d(a,{Z:()=>g});var t=n(7462),s=n(7294),r=n(6010),m=n(2389),p=n(7392),i=n(7094),l=n(2466);const o="tabList__CuJ",c="tabItem_LNqP";function N(e){var a;const{lazy:n,block:m,defaultValue:N,values:g,groupId:k,className:u}=e,d=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=g??d.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),y=(0,p.l)(h,((e,a)=>e.value===a.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===N?N:N??(null==(a=d.find((e=>e.props.default)))?void 0:a.props.value)??d[0].props.value;if(null!==f&&!h.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:b}=(0,i.U)(),[w,j]=(0,s.useState)(f),x=[],{blockElementScrollPositionUntilNextRender:P}=(0,l.o5)();if(null!=k){const e=v[k];null!=e&&e!==w&&h.some((a=>a.value===e))&&j(e)}const S=e=>{const a=e.currentTarget,n=x.indexOf(a),t=h[n].value;t!==w&&(P(a),j(t),null!=k&&b(k,String(t)))},R=e=>{var a;let n=null;switch(e.key){case"ArrowRight":{const a=x.indexOf(e.currentTarget)+1;n=x[a]??x[0];break}case"ArrowLeft":{const a=x.indexOf(e.currentTarget)-1;n=x[a]??x[x.length-1];break}}null==(a=n)||a.focus()};return s.createElement("div",{className:(0,r.Z)("tabs-container",o)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":m},u)},h.map((e=>{let{value:a,label:n,attributes:m}=e;return s.createElement("li",(0,t.Z)({role:"tab",tabIndex:w===a?0:-1,"aria-selected":w===a,key:a,ref:e=>x.push(e),onKeyDown:R,onFocus:S,onClick:S},m,{className:(0,r.Z)("tabs__item",c,null==m?void 0:m.className,{"tabs__item--active":w===a})}),n??a)}))),n?(0,s.cloneElement)(d.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},d.map(((e,a)=>(0,s.cloneElement)(e,{key:a,hidden:e.props.value!==w})))))}function g(e){const a=(0,m.Z)();return s.createElement(N,(0,t.Z)({key:String(a)},e))}},2:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>p,metadata:()=>l,toc:()=>c});var t=n(7462),s=(n(7294),n(3905)),r=n(5488),m=n(5162);const p={title:"Longest Palindromic Substring"},i=void 0,l={unversionedId:"string/longest-palindromic-substring",id:"string/longest-palindromic-substring",title:"Longest Palindromic Substring",description:"\u63cf\u8ff0",source:"@site/docs/string/longest-palindromic-substring.md",sourceDirName:"string",slug:"/string/longest-palindromic-substring",permalink:"/string/longest-palindromic-substring",draft:!1,tags:[],version:"current",frontMatter:{title:"Longest Palindromic Substring"},sidebar:"docs",previous:{title:"String to Integer (atoi)",permalink:"/string/atoi"},next:{title:"Regular Expression Matching",permalink:"/string/regular-expression-matching"}},o={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u5907\u5fd8\u5f55\u6cd5",id:"\u5907\u5fd8\u5f55\u6cd5",level:3},{value:"\u52a8\u89c4",id:"\u52a8\u89c4",level:3},{value:"Manacher\u2019s Algorithm",id:"manachers-algorithm",level:3}],N={toc:c};function g(e){let{components:a,...n}=e;return(0,s.kt)("wrapper",(0,t.Z)({},N,n,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,s.kt)("p",null,"Given a string ",(0,s.kt)("inlineCode",{parentName:"p"},"S"),", find the longest palindromic substring in ",(0,s.kt)("inlineCode",{parentName:"p"},"S"),". You may assume that the maximum length of ",(0,s.kt)("inlineCode",{parentName:"p"},"S")," is 1000, and there exists one unique longest palindromic substring."),(0,s.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,s.kt)("p",null,"\u6700\u957f\u56de\u6587\u5b50\u4e32\uff0c\u975e\u5e38\u7ecf\u5178\u7684\u9898\u3002"),(0,s.kt)("p",null,"\u601d\u8def\u4e00\uff1a\u66b4\u529b\u679a\u4e3e\uff0c\u4ee5\u6bcf\u4e2a\u5143\u7d20\u4e3a\u4e2d\u95f4\u5143\u7d20\uff0c\u540c\u65f6\u4ece\u5de6\u53f3\u51fa\u53d1\uff0c\u590d\u6742\u5ea6",(0,s.kt)("inlineCode",{parentName:"p"},"O(n^2)"),"\u3002"),(0,s.kt)("p",null,"\u601d\u8def\u4e8c\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22\uff0c\u590d\u6742\u5ea6",(0,s.kt)("inlineCode",{parentName:"p"},"O(n^2)"),"\u3002\u8bbe",(0,s.kt)("inlineCode",{parentName:"p"},"f[i][j]")," \u8868\u793a","[i,j]","\u4e4b\u95f4\u7684\u6700\u957f\u56de\u6587\u5b50\u4e32\uff0c\u9012\u63a8\u65b9\u7a0b\u5982\u4e0b\uff1a"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"f[i][j] = if (i == j) S[i]\n          if (S[i] == S[j] && f[i+1][j-1] == S[i+1][j-1]) S[i][j]\n          else max(f[i+1][j-1], f[i][j-1], f[i+1][j])\n")),(0,s.kt)("p",null,"\u601d\u8def\u4e09\uff1a\u52a8\u89c4\uff0c\u590d\u6742\u5ea6",(0,s.kt)("inlineCode",{parentName:"p"},"O(n^2)"),"\u3002\u8bbe\u72b6\u6001\u4e3a",(0,s.kt)("inlineCode",{parentName:"p"},"f(i,j)"),"\uff0c\u8868\u793a\u533a\u95f4","[i,j]","\u662f\u5426\u4e3a\u56de\u6587\u4e32\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a"),(0,s.kt)("div",{className:"math math-display"},(0,s.kt)("span",{parentName:"div",className:"katex-display"},(0,s.kt)("span",{parentName:"span",className:"katex"},(0,s.kt)("span",{parentName:"span",className:"katex-mathml"},(0,s.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,s.kt)("semantics",{parentName:"math"},(0,s.kt)("mrow",{parentName:"semantics"},(0,s.kt)("mi",{parentName:"mrow"},"f"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow"},"j"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mrow",{parentName:"mrow"},(0,s.kt)("mo",{parentName:"mrow",fence:"true"},"{"),(0,s.kt)("mtable",{parentName:"mrow",rowspacing:"0.36em",columnalign:"left left",columnspacing:"1em"},(0,s.kt)("mtr",{parentName:"mtable"},(0,s.kt)("mtd",{parentName:"mtr"},(0,s.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"false"},(0,s.kt)("mrow",{parentName:"mstyle"},(0,s.kt)("mi",{parentName:"mrow"},"t"),(0,s.kt)("mi",{parentName:"mrow"},"r"),(0,s.kt)("mi",{parentName:"mrow"},"u"),(0,s.kt)("mi",{parentName:"mrow"},"e")))),(0,s.kt)("mtd",{parentName:"mtr"},(0,s.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"false"},(0,s.kt)("mrow",{parentName:"mstyle"},(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"j"))))),(0,s.kt)("mtr",{parentName:"mtable"},(0,s.kt)("mtd",{parentName:"mtr"},(0,s.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"false"},(0,s.kt)("mrow",{parentName:"mstyle"},(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,s.kt)("mi",{parentName:"mrow"},"j"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"]")))),(0,s.kt)("mtd",{parentName:"mtr"},(0,s.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"false"},(0,s.kt)("mrow",{parentName:"mstyle"},(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow"},"j"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"))))),(0,s.kt)("mtr",{parentName:"mtable"},(0,s.kt)("mtd",{parentName:"mtr"},(0,s.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"false"},(0,s.kt)("mrow",{parentName:"mstyle"},(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,s.kt)("mo",{parentName:"mrow"},"="),(0,s.kt)("mi",{parentName:"mrow"},"S"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"["),(0,s.kt)("mi",{parentName:"mrow"},"j"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"]"),(0,s.kt)("mtext",{parentName:"mrow"},"\xa0and\xa0"),(0,s.kt)("mi",{parentName:"mrow"},"f"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow"},"j"),(0,s.kt)("mo",{parentName:"mrow"},"\u2212"),(0,s.kt)("mn",{parentName:"mrow"},"1"),(0,s.kt)("mo",{parentName:"mrow",stretchy:"false"},")")))),(0,s.kt)("mtd",{parentName:"mtr"},(0,s.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"false"},(0,s.kt)("mrow",{parentName:"mstyle"},(0,s.kt)("mo",{parentName:"mrow",separator:"true"},","),(0,s.kt)("mi",{parentName:"mrow"},"j"),(0,s.kt)("mo",{parentName:"mrow"},">"),(0,s.kt)("mi",{parentName:"mrow"},"i"),(0,s.kt)("mo",{parentName:"mrow"},"+"),(0,s.kt)("mn",{parentName:"mrow"},"1")))))))),(0,s.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"f(i,j)=\\begin{cases} true & ,i=j\\\\ S[i]=S[j] & , j = i + 1 \\\\ S[i]=S[j] \\text{ and } f(i+1, j-1) & , j > i + 1 \\end{cases}")))),(0,s.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,s.kt)("span",{parentName:"span",className:"base"},(0,s.kt)("span",{parentName:"span",className:"strut",style:{height:"4.32em",verticalAlign:"-1.91em"}}),(0,s.kt)("span",{parentName:"span",className:"minner"},(0,s.kt)("span",{parentName:"span",className:"mopen"},(0,s.kt)("span",{parentName:"span",className:"delimsizing mult"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"2.35em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-2.2em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.15em"}}),(0,s.kt)("span",{parentName:"span",className:"delimsizinginner delim-size4"},(0,s.kt)("span",{parentName:"span"},"\u23a9"))),(0,s.kt)("span",{parentName:"span",style:{top:"-2.192em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.15em"}}),(0,s.kt)("span",{parentName:"span",style:{height:"0.316em",width:"0.8889em"}},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.316em",style:{width:"0.8889em"},viewBox:"0 0 888.89 316",preserveAspectRatio:"xMinYMin"},(0,s.kt)("path",{parentName:"svg",d:"M384 0 H504 V316 H384z M384 0 H504 V316 H384z"})))),(0,s.kt)("span",{parentName:"span",style:{top:"-3.15em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.15em"}}),(0,s.kt)("span",{parentName:"span",className:"delimsizinginner delim-size4"},(0,s.kt)("span",{parentName:"span"},"\u23a8"))),(0,s.kt)("span",{parentName:"span",style:{top:"-4.292em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.15em"}}),(0,s.kt)("span",{parentName:"span",style:{height:"0.316em",width:"0.8889em"}},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.316em",style:{width:"0.8889em"},viewBox:"0 0 888.89 316",preserveAspectRatio:"xMinYMin"},(0,s.kt)("path",{parentName:"svg",d:"M384 0 H504 V316 H384z M384 0 H504 V316 H384z"})))),(0,s.kt)("span",{parentName:"span",style:{top:"-4.6em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.15em"}}),(0,s.kt)("span",{parentName:"span",className:"delimsizinginner delim-size4"},(0,s.kt)("span",{parentName:"span"},"\u23a7")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.85em"}},(0,s.kt)("span",{parentName:"span"})))))),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mtable"},(0,s.kt)("span",{parentName:"span",className:"col-align-l"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"2.41em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-4.41em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.008em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"t"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"r"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"u"),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"))),(0,s.kt)("span",{parentName:"span",style:{top:"-2.97em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.008em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"["),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"["),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,s.kt)("span",{parentName:"span",className:"mclose"},"]"))),(0,s.kt)("span",{parentName:"span",style:{top:"-1.53em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.008em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"["),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05764em"}},"S"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"["),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,s.kt)("span",{parentName:"span",className:"mclose"},"]"),(0,s.kt)("span",{parentName:"span",className:"mord text"},(0,s.kt)("span",{parentName:"span",className:"mord"},"\xa0and\xa0")),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.10764em"}},"f"),(0,s.kt)("span",{parentName:"span",className:"mopen"},"("),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"),(0,s.kt)("span",{parentName:"span",className:"mclose"},")")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.91em"}},(0,s.kt)("span",{parentName:"span"}))))),(0,s.kt)("span",{parentName:"span",className:"arraycolsep",style:{width:"1em"}}),(0,s.kt)("span",{parentName:"span",className:"col-align-l"},(0,s.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"2.41em"}},(0,s.kt)("span",{parentName:"span",style:{top:"-4.41em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.008em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"))),(0,s.kt)("span",{parentName:"span",style:{top:"-2.97em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.008em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},"="),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1"))),(0,s.kt)("span",{parentName:"span",style:{top:"-1.53em"}},(0,s.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.008em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},(0,s.kt)("span",{parentName:"span",className:"mpunct"},","),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.05724em"}},"j"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mrel"},">"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,s.kt)("span",{parentName:"span",className:"mord mathnormal"},"i"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,s.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,s.kt)("span",{parentName:"span",className:"mord"},"1")))),(0,s.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,s.kt)("span",{parentName:"span",className:"vlist-r"},(0,s.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.91em"}},(0,s.kt)("span",{parentName:"span"}))))))),(0,s.kt)("span",{parentName:"span",className:"mclose nulldelimiter"}))))))),(0,s.kt)("p",null,"\u601d\u8def\u56db\uff1aManacher\u2019s Algorithm, \u590d\u6742\u5ea6",(0,s.kt)("inlineCode",{parentName:"p"},"O(n)"),"\u3002\u8be6\u7ec6\u89e3\u91ca\u89c1 ",(0,s.kt)("a",{parentName:"p",href:"http://leetcode.com/2011/11/longest-palindromic-substring-part-ii.html"},"http://leetcode.com/2011/11/longest-palindromic-substring-part-ii.html"),"\u3002"),(0,s.kt)("h3",{id:"\u5907\u5fd8\u5f55\u6cd5"},"\u5907\u5fd8\u5f55\u6cd5"),(0,s.kt)(r.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"// Longest Palindromic Substring\n// \u5907\u5fd8\u5f55\u6cd5\uff0c\u4f1a\u8d85\u65f6\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n^2)\npublic class Solution {\n    private final HashMap<Pair, String> cache = new HashMap<>();\n\n    public String longestPalindrome(final String s) {\n        cache.clear();\n        return cachedLongestPalindrome(s, 0, s.length() - 1);\n    }\n\n    String longestPalindrome(final String s, int i, int j) {\n        final int length = j - i + 1;\n        if (length < 2) return s.substring(i, j + 1);\n\n        final String s1 = cachedLongestPalindrome(s, i + 1, j - 1);\n\n        if (s1.length() == length - 2 && s.charAt(i + 1) == s.charAt(j - 1))\n            return s.substring(i, j + 1);\n\n        final String s2 = cachedLongestPalindrome(s, i + 1, j);\n        final String s3 = cachedLongestPalindrome(s, i, j - 1);\n\n        // return max(s1, s2, s3)\n        if (s1.length() > s2.length()) return s1.length() > s3.length() ? s1 : s3;\n        else return s2.length() > s3.length() ? s2 : s3;\n    }\n\n    String cachedLongestPalindrome(final String s, int i, int j) {\n        final Pair key = new Pair(i, j);\n\n        if (cache.containsKey(key)) {\n            return cache.get(key);\n        } else {\n            final String result = longestPalindrome(s, i, j);\n            cache.put(key, result);\n            return result;\n        }\n    }\n\n    // immutable\n    static class Pair {\n        private int x;\n        private int y;\n\n        public Pair(int x, int y) {\n            this.x = x;\n            this.y = y;\n        }\n\n        @Override\n        public int hashCode() {\n            return x * 31 + y;\n        }\n\n        @Override\n        public boolean equals(Object other) {\n            if (this == other) return true;\n            if (this.hashCode() != other.hashCode()) return false;\n            if (!(other instanceof Pair)) return false;\n\n            final Pair o = (Pair) other;\n            return this.x == o.x && this.y == o.y;\n        }\n    }\n}\n"))),(0,s.kt)(m.Z,{value:"cpp",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"// Longest Palindromic Substring\n// \u5907\u5fd8\u5f55\u6cd5\uff0c\u4f1a\u8d85\u65f6\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n^2)\nnamespace std {\ntemplate<>\nstruct hash<pair<int, int>> {\n    size_t operator()(pair<int, int> const& p) const {\n        return p.first * 31 + p.second;\n    }\n};\n}\n\nclass Solution {\npublic:\n    string longestPalindrome(string const& s) {\n        cache.clear();\n        return cachedLongestPalindrome(s, 0, s.length() - 1);\n    }\n\nprivate:\n    unordered_map<pair<int, int>, string> cache;\n\n    string longestPalindrome(string const& s, int i, int j) {\n        const int length = j - i + 1;\n        if (length < 2) return s.substr(i, length);\n\n        const string& s1 = cachedLongestPalindrome(s, i + 1, j - 1);\n\n        if (s1.length() == length - 2 && s[i + 1] == s[j - 1])\n            return s.substr(i, length);\n\n        const string& s2 = cachedLongestPalindrome(s, i + 1, j);\n        const string& s3 = cachedLongestPalindrome(s, i, j - 1);\n\n        // return max(s1, s2, s3)\n        if (s1.length() > s2.length()) return s1.length() > s3.length() ? s1 : s3;\n        else return s2.length() > s3.length() ? s2 : s3;\n    }\n\n    string cachedLongestPalindrome(string const& s, int i, int j) {\n        auto key = make_pair(i, j);\n        auto pos = cache.find(key);\n\n        if (pos != cache.end()) return pos->second;\n        else return cache[key] = longestPalindrome(s, i, j);\n    }\n};\n")))),(0,s.kt)("h3",{id:"\u52a8\u89c4"},"\u52a8\u89c4"),(0,s.kt)(r.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"// Longest Palindromic Substring\n// \u52a8\u89c4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n^2)\nclass Solution {\n    public String longestPalindrome(final String s) {\n        final int n = s.length();\n        final boolean[][] f = new boolean[n][n];\n        int maxLen = 1, start = 0;  // \u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u8d77\u70b9\n\n        for (int i = 0; i < n; i++) {\n            f[i][i] = true;\n            for (int j = 0; j < i; j++) {  // [j, i]\n                f[j][i] = (s.charAt(j) == s.charAt(i) &&\n                        (i - j < 2 || f[j + 1][i - 1]));\n                if (f[j][i] && maxLen < (i - j + 1)) {\n                    maxLen = i - j + 1;\n                    start = j;\n                }\n            }\n        }\n        return s.substring(start, start + maxLen);\n    }\n}\n"))),(0,s.kt)(m.Z,{value:"cpp",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},"// Longest Palindromic Substring\n// \u52a8\u89c4\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n^2)\nclass Solution {\npublic:\n    string longestPalindrome(const string& s) {\n        const int n = s.size();\n        bool f[n][n];\n        fill_n(&f[0][0], n * n, false);\n        // \u7528 vector \u4f1a\u8d85\u65f6\n        //vector<vector<bool> > f(n, vector<bool>(n, false));\n        size_t max_len = 1, start = 0;  // \u6700\u957f\u56de\u6587\u5b50\u4e32\u7684\u957f\u5ea6\uff0c\u8d77\u70b9\n\n        for (size_t i = 0; i < s.size(); i++) {\n            f[i][i] = true;\n            for (size_t j = 0; j < i; j++) {  // [j, i]\n                f[j][i] = (s[j] == s[i] && (i - j < 2 || f[j + 1][i - 1]));\n                if (f[j][i] && max_len < (i - j + 1)) {\n                    max_len = i - j + 1;\n                    start = j;\n                }\n            }\n        }\n        return s.substr(start, max_len);\n    }\n};\n")))),(0,s.kt)("h3",{id:"manachers-algorithm"},"Manacher\u2019s Algorithm"),(0,s.kt)(r.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,s.kt)(m.Z,{value:"java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'// Longest Palindromic Substring\n// Manacher\u2019s Algorithm\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\n    // Transform S into T.\n    // For example, S = "abba", T = "^#a#b#b#a#$".\n    // ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    public String preProcess(final String s) {\n        int n = s.length();\n        if (n == 0) return "^$";\n\n        StringBuilder ret = new StringBuilder("^");\n        for (int i = 0; i < n; i++) ret.append("#" + s.charAt(i));\n\n        ret.append("#$");\n        return ret.toString();\n    }\n\n    String longestPalindrome(String s) {\n        String T = preProcess(s);\n        final int n = T.length();\n        // \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        // \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        int[] P = new int[n];\n        int C = 0, R = 0;\n\n        for (int i = 1; i < n - 1; i++) {\n            int iMirror = 2 * C - i; // equals to i\' = C - (i-C)\n\n            P[i] = (R > i) ? Math.min(R - i, P[iMirror]) : 0;\n\n            // Attempt to expand palindrome centered at i\n            while (T.charAt(i + 1 + P[i]) == T.charAt(i - 1 - P[i]))\n                P[i]++;\n\n            // If palindrome centered at i expand past R,\n            // adjust center based on expanded palindrome.\n            if (i + P[i] > R) {\n                C = i;\n                R = i + P[i];\n            }\n        }\n\n        // Find the maximum element in P.\n        int maxLen = 0;\n        int centerIndex = 0;\n        for (int i = 1; i < n - 1; i++) {\n            if (P[i] > maxLen) {\n                maxLen = P[i];\n                centerIndex = i;\n            }\n        }\n\n        final int start =(centerIndex - 1 - maxLen) / 2;\n        return s.substring(start, start + maxLen);\n    }\n}\n'))),(0,s.kt)(m.Z,{value:"cpp",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-cpp"},'// Longest Palindromic Substring\n// Manacher\u2019s Algorithm\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    // Transform S into T.\n    // For example, S = "abba", T = "^#a#b#b#a#$".\n    // ^ and $ signs are sentinels appended to each end to avoid bounds checking\n    string preProcess(const string& s) {\n        int n = s.length();\n        if (n == 0) return "^$";\n\n        string ret = "^";\n        for (int i = 0; i < n; i++) ret += "#" + s.substr(i, 1);\n\n        ret += "#$";\n        return ret;\n    }\n\n    string longestPalindrome(string s) {\n        string T = preProcess(s);\n        const int n = T.length();\n        // \u4ee5T[i]\u4e3a\u4e2d\u5fc3\uff0c\u5411\u5de6/\u53f3\u6269\u5f20\u7684\u957f\u5ea6\uff0c\u4e0d\u5305\u542bT[i]\u81ea\u5df1\uff0c\n        // \u56e0\u6b64 P[i]\u662f\u6e90\u5b57\u7b26\u4e32\u4e2d\u56de\u6587\u4e32\u7684\u957f\u5ea6\n        int P[n];\n        int C = 0, R = 0;\n\n        for (int i = 1; i < n - 1; i++) {\n            int i_mirror = 2 * C - i; // equals to i\' = C - (i-C)\n\n            P[i] = (R > i) ? min(R - i, P[i_mirror]) : 0;\n\n            // Attempt to expand palindrome centered at i\n            while (T[i + 1 + P[i]] == T[i - 1 - P[i]])\n                P[i]++;\n\n            // If palindrome centered at i expand past R,\n            // adjust center based on expanded palindrome.\n            if (i + P[i] > R) {\n                C = i;\n                R = i + P[i];\n            }\n        }\n\n        // Find the maximum element in P.\n        int max_len = 0;\n        int center_index = 0;\n        for (int i = 1; i < n - 1; i++) {\n            if (P[i] > max_len) {\n                max_len = P[i];\n                center_index = i;\n            }\n        }\n\n        return s.substr((center_index - 1 - max_len) / 2, max_len);\n    }\n};\n')))))}g.isMDXComponent=!0}}]);
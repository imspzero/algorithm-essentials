"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[9610],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>h});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=a.createContext({}),s=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(t),h=l,m=d["".concat(c,".").concat(h)]||d[h]||p[h]||i;return t?a.createElement(m,r(r({ref:n},u),{},{components:t})):a.createElement(m,r({ref:n},u))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var i=t.length,r=new Array(i);r[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var s=2;s<i;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>r});var a=t(7294),l=t(6010);const i="tabItem_Ymn6";function r(e){let{children:n,hidden:t,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>h});var a=t(7462),l=t(7294),i=t(6010),r=t(2389),o=t(7392),c=t(7094),s=t(2466);const u="tabList__CuJ",p="tabItem_LNqP";function d(e){var n,t;const{lazy:r,block:d,defaultValue:h,values:m,groupId:v,className:k}=e,y=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:y.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),b=(0,o.l)(f,((e,n)=>e.value===n.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const N=null===h?h:null!=(n=null!=h?h:null==(t=y.find((e=>e.props.default)))?void 0:t.props.value)?n:y[0].props.value;if(null!==N&&!f.some((e=>e.value===N)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:g,setTabGroupChoices:C}=(0,c.U)(),[L,w]=(0,l.useState)(N),O=[],{blockElementScrollPositionUntilNextRender:x}=(0,s.o5)();if(null!=v){const e=g[v];null!=e&&e!==L&&f.some((n=>n.value===e))&&w(e)}const T=e=>{const n=e.currentTarget,t=O.indexOf(n),a=f[t].value;a!==L&&(x(n),w(a),null!=v&&C(v,String(a)))},E=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=O.indexOf(e.currentTarget)+1;t=null!=(a=O[n])?a:O[0];break}case"ArrowLeft":{var l;const n=O.indexOf(e.currentTarget)-1;t=null!=(l=O[n])?l:O[O.length-1];break}}null==(n=t)||n.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":d},k)},f.map((e=>{let{value:n,label:t,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:L===n?0:-1,"aria-selected":L===n,key:n,ref:e=>O.push(e),onKeyDown:E,onFocus:T,onClick:T},r,{className:(0,i.Z)("tabs__item",p,null==r?void 0:r.className,{"tabs__item--active":L===n})}),null!=t?t:n)}))),r?(0,l.cloneElement)(y.filter((e=>e.props.value===L))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},y.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==L})))))}function h(e){const n=(0,r.Z)();return l.createElement(d,(0,a.Z)({key:String(n)},e))}},7908:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(7462),l=(t(7294),t(3905)),i=t(5488),r=t(5162);const o={title:"LRU Cache"},c=void 0,s={unversionedId:"linked-list/lru-cache",id:"linked-list/lru-cache",title:"LRU Cache",description:"\u63cf\u8ff0",source:"@site/docs/linked-list/lru-cache.md",sourceDirName:"linked-list",slug:"/linked-list/lru-cache",permalink:"/linked-list/lru-cache",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/linked-list/lru-cache.md",tags:[],version:"current",frontMatter:{title:"LRU Cache"},sidebar:"someSidebar",previous:{title:"Reorder List",permalink:"/linked-list/reorder-list"},next:{title:"LFU Cache",permalink:"/linked-list/lfu-cache"}},u={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],d={toc:p};function h(e){let{components:n,...o}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,l.kt)("p",null,"Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and set."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"get(key)")," - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"set(key, value)")," - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item."),(0,l.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,l.kt)("p",null,"\u4e3a\u4e86\u4f7f\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u90fd\u6709\u8f83\u9ad8\u7684\u6027\u80fd\uff0c\u8fd9\u9898\u7684\u5173\u952e\u662f\u8981\u4f7f\u7528\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u548c\u4e00\u4e2a HashMap\uff0c\u56e0\u4e3a\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"HashMap \u4fdd\u5b58\u6bcf\u4e2a\u8282\u70b9\u7684\u5730\u5740\uff0c\u53ef\u4ee5\u57fa\u672c\u4fdd\u8bc1\u5728",(0,l.kt)("inlineCode",{parentName:"li"},"O(1)"),"\u65f6\u95f4\u5185\u67e5\u627e\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"\u53cc\u5411\u94fe\u8868\u80fd\u540e\u5728",(0,l.kt)("inlineCode",{parentName:"li"},"O(1)"),"\u65f6\u95f4\u5185\u6dfb\u52a0\u548c\u5220\u9664\u8282\u70b9\uff0c\u5355\u94fe\u8868\u5219\u4e0d\u884c")),(0,l.kt)("p",null,"\u5177\u4f53\u5b9e\u73b0\u7ec6\u8282\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8d8a\u9760\u8fd1\u94fe\u8868\u5934\u90e8\uff0c\u8868\u793a\u8282\u70b9\u4e0a\u6b21\u8bbf\u95ee\u8ddd\u79bb\u73b0\u5728\u65f6\u95f4\u6700\u77ed\uff0c\u5c3e\u90e8\u7684\u8282\u70b9\u8868\u793a\u6700\u8fd1\u8bbf\u95ee\u6700\u5c11"),(0,l.kt)("li",{parentName:"ul"},"\u8bbf\u95ee\u8282\u70b9\u65f6\uff0c\u5982\u679c\u8282\u70b9\u5b58\u5728\uff0c\u628a\u8be5\u8282\u70b9\u4ea4\u6362\u5230\u94fe\u8868\u5934\u90e8\uff0c\u540c\u65f6\u66f4\u65b0 hash \u8868\u4e2d\u8be5\u8282\u70b9\u7684\u5730\u5740"),(0,l.kt)("li",{parentName:"ul"},"\u63d2\u5165\u8282\u70b9\u65f6\uff0c\u5982\u679c cache \u7684 size \u8fbe\u5230\u4e86\u4e0a\u9650 capacity\uff0c\u5219\u5220\u9664\u5c3e\u90e8\u8282\u70b9\uff0c\u540c\u65f6\u8981\u5728 hash \u8868\u4e2d\u5220\u9664\u5bf9\u5e94\u7684\u9879\uff1b\u65b0\u8282\u70b9\u63d2\u5165\u94fe\u8868\u5934\u90e8")),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"LRU Cche",src:t(2333).Z,width:"650",height:"296"})),(0,l.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,l.kt)("p",null,"C++\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"std::list")," \u5c31\u662f\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u4e14\u5b83\u6709\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"splice()"),"\u65b9\u6cd5\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"O(1)"),"\u65f6\u95f4\uff0c\u975e\u5e38\u597d\u7528\u3002"),(0,l.kt)("p",null,"Java \u4e2d\u4e5f\u6709\u53cc\u5411\u94fe\u8868",(0,l.kt)("inlineCode",{parentName:"p"},"LinkedList"),", \u4f46\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"LinkedList")," \u5c01\u88c5\u7684\u592a\u6df1\uff0c\u6ca1\u6709\u80fd\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"O(1)"),"\u65f6\u95f4\u5185\u5220\u9664\u4e2d\u95f4\u67d0\u4e2a\u5143\u7d20\u7684 API(C++\u7684",(0,l.kt)("inlineCode",{parentName:"p"},"list"),"\u6709\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"splice()"),", O(1), \u6240\u4ee5\u672c\u9898 C++\u53ef\u4ee5\u653e\u5fc3\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"splice()"),")\uff0c\u4e8e\u662f\u6211\u4eec\u53ea\u80fd\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u3002"),(0,l.kt)("p",null,"\u672c\u9898\u6709\u7684\u4eba\u76f4\u63a5\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"LinkedHashMap")," \uff0c\u4ee3\u7801\u66f4\u77ed\uff0c\u4f46\u8fd9\u662f\u4e00\u79cd\u5077\u61d2\u505a\u6cd5\uff0c\u9762\u8bd5\u5b98\u4e00\u5b9a\u4f1a\u8ba9\u4f60\u81ea\u5df1\u91cd\u65b0\u5b9e\u73b0\u3002"),(0,l.kt)(i.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(r.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// LRU Cache\n// HashMap + Doubly Linked List\npublic class LRUCache {\n    private int capacity;\n    private HashMap<Integer, Node> m;\n    private DList list;\n\n    public LRUCache(int capacity) {\n        this.capacity = capacity;\n        m = new HashMap<>();\n        list = new DList();\n    }\n\n    // Time Complexity: O(1)\n    public int get(int key) {\n        if (!m.containsKey(key)) return -1;\n        Node node = m.get(key);\n        update(node);\n        return node.value;\n    }\n\n    // Time Complexity: O(1)\n    public void put(int key, int value) {\n        if (m.containsKey(key)){\n            Node node = m.get(key);\n            node.value = value;\n            update(node);\n        } else {\n            Node node = new Node(key, value);\n            if (m.size() >= capacity){\n                Node last = list.peekLast();\n                m.remove(last.key);\n                list.remove(last);\n            }\n\n            list.offerFirst(node);\n            m.put(key, node);\n        }\n    }\n\n    private void update(Node node) {\n        list.remove(node);\n        list.offerFirst(node);\n    }\n\n\n    // Node of doubly linked list\n    static class Node {\n        int key, value;\n        Node prev, next;\n\n        Node(int key, int value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n\n    // Doubly linked list\n    static class DList {\n        Node head, tail;\n        int size;\n\n        DList() {\n            // head and tail are two dummy nodes\n            head = new Node(0, 0);\n            tail = new Node(0, 0);\n            head.next = tail;\n            tail.prev = head;\n        }\n\n        // Add a new node at head\n        void offerFirst(Node node) {\n            head.next.prev = node;\n            node.next = head.next;\n            node.prev = head;\n            head.next = node;\n            size++;\n        }\n\n        // Remove a node in the middle\n        void remove(Node node) {\n            if (node == null) return;\n            node.prev.next = node.next;\n            node.next.prev = node.prev;\n            size--;\n        }\n\n        // Remove the tail node\n        Node pollLast() {\n            Node last = tail.prev;\n            remove(last);\n            return last;\n        }\n\n        Node peekLast() {\n            return tail.prev;\n        }\n    }\n}\n"))),(0,l.kt)(r.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// LRU Cache\n// \u65f6\u95f4\u590d\u6742\u5ea6O(logn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass LRUCache{\nprivate:\n    struct CacheNode {\n        int key;\n        int value;\n        CacheNode(int k, int v) :key(k), value(v){}\n    };\npublic:\n    LRUCache(int capacity) {\n        this->capacity = capacity;\n    }\n\n    int get(int key) {\n        if (cacheMap.find(key) == cacheMap.end()) return -1;\n\n        // \u628a\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u79fb\u5230\u94fe\u8868\u5934\u90e8\uff0c\u5e76\u4e14\u66f4\u65b0map\u4e2d\u8be5\u8282\u70b9\u7684\u5730\u5740\n        cacheList.splice(cacheList.begin(), cacheList, cacheMap[key]);\n        cacheMap[key] = cacheList.begin();\n        return cacheMap[key]->value;\n    }\n\n    void put(int key, int value) {\n        if (cacheMap.find(key) == cacheMap.end()) {\n            if (cacheList.size() == capacity) { //\u5220\u9664\u94fe\u8868\u5c3e\u90e8\u8282\u70b9\uff08\u6700\u5c11\u8bbf\u95ee\u7684\u8282\u70b9\uff09\n                cacheMap.erase(cacheList.back().key);\n                cacheList.pop_back();\n            }\n            // \u63d2\u5165\u65b0\u8282\u70b9\u5230\u94fe\u8868\u5934\u90e8, \u5e76\u4e14\u5728map\u4e2d\u589e\u52a0\u8be5\u8282\u70b9\n            cacheList.push_front(CacheNode(key, value));\n            cacheMap[key] = cacheList.begin();\n        } else {\n            //\u66f4\u65b0\u8282\u70b9\u7684\u503c\uff0c\u628a\u5f53\u524d\u8bbf\u95ee\u7684\u8282\u70b9\u79fb\u5230\u94fe\u8868\u5934\u90e8,\u5e76\u4e14\u66f4\u65b0map\u4e2d\u8be5\u8282\u70b9\u7684\u5730\u5740\n            cacheMap[key]->value = value;\n            cacheList.splice(cacheList.begin(), cacheList, cacheMap[key]);\n            cacheMap[key] = cacheList.begin();\n        }\n    }\nprivate:\n    list<CacheNode> cacheList; // doubly linked list\n    unordered_map<int, list<CacheNode>::iterator> cacheMap;\n    int capacity;\n};\n")))),(0,l.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/linked-list/lfu-cache"},"LFU Cache"))))}h.isMDXComponent=!0},2333:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/lru-cache-a6cb2698b18906d4a2ed6420c128a689.png"}}]);
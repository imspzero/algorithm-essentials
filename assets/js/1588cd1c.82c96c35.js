"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[5813],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(n),f=r,d=p["".concat(c,".").concat(f)]||p[f]||m[f]||l;return n?a.createElement(d,i(i({ref:t},s),{},{components:n})):a.createElement(d,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(7462),r=n(7294),l=n(6010),i=n(2389),o=n(7392),c=n(7094),u=n(2466);const s="tabList__CuJ",m="tabItem_LNqP";function p(e){var t;const{lazy:n,block:i,defaultValue:p,values:f,groupId:d,className:v}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=f??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),j=(0,o.l)(g,((e,t)=>e.value===t.value));if(j.length>0)throw new Error(`Docusaurus error: Duplicate values "${j.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===p?p:p??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==h&&!g.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:x}=(0,c.U)(),[k,O]=(0,r.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=d){const e=y[d];null!=e&&e!==k&&g.some((t=>t.value===e))&&O(e)}const E=e=>{const t=e.currentTarget,n=w.indexOf(t),a=g[n].value;a!==k&&(T(t),O(a),null!=d&&x(d,String(a)))},R=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;n=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;n=w[t]??w[w.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",s)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},v)},g.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>w.push(e),onKeyDown:R,onFocus:E,onClick:E},i,{className:(0,l.Z)("tabs__item",m,null==i?void 0:i.className,{"tabs__item--active":k===t})}),n??t)}))),n?(0,r.cloneElement)(b.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function f(e){const t=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},3127:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>u,toc:()=>m});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),i=n(5162);const o={title:"Maximal Rectangle"},c=void 0,u={unversionedId:"dp/maximal-rectangle",id:"dp/maximal-rectangle",title:"Maximal Rectangle",description:"\u63cf\u8ff0",source:"@site/docs/dp/maximal-rectangle.md",sourceDirName:"dp",slug:"/dp/maximal-rectangle",permalink:"/dp/maximal-rectangle",draft:!1,tags:[],version:"current",frontMatter:{title:"Maximal Rectangle"},sidebar:"docs",previous:{title:"Palindrome Partitioning II",permalink:"/dp/palindrome-partitioning-ii"},next:{title:"Best Time to Buy and Sell Stock III",permalink:"/dp/best-time-to-buy-and-sell-stock-iii"}},s={},m=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:m};function f(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Given a 2D binary matrix filled with 0's and 1's, find the largest rectangle containing all ones and return its area."),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,"\u65e0"),(0,r.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.kt)(l.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Maximal Rectangle\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\npublic class Solution {\n    public int maximalRectangle(char[][] matrix) {\n        if (matrix.length == 0)  return 0;\n\n        final int m = matrix.length;\n        final int n = matrix[0].length;\n        int[] H = new int[n];\n        int[] L = new int[n];\n        int[] R = new int[n];\n        Arrays.fill(R, n);\n\n        int ret = 0;\n        for (int i = 0; i < m; ++i) {\n            int left = 0, right = n;\n            // calculate L(i, j) from left to right\n            for (int j = 0; j < n; ++j) {\n                if (matrix[i][j] == '1') {\n                    ++H[j];\n                    L[j] = Math.max(L[j], left);\n                } else {\n                    left = j+1;\n                    H[j] = 0; L[j] = 0; R[j] = n;\n                }\n            }\n            // calculate R(i, j) from right to left\n            for (int j = n-1; j >= 0; --j) {\n                if (matrix[i][j] == '1') {\n                    R[j] = Math.min(R[j], right);\n                    ret = Math.max(ret, H[j]*(R[j]-L[j]));\n                } else {\n                    right = j;\n                }\n            }\n        }\n        return ret;\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Maximal Rectangle\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(n)\nclass Solution {\npublic:\n    int maximalRectangle(vector<vector<char> > &matrix) {\n        if (matrix.empty())  return 0;\n\n        const int m = matrix.size();\n        const int n = matrix[0].size();\n        vector<int> H(n, 0);\n        vector<int> L(n, 0);\n        vector<int> R(n, n);\n\n        int ret = 0;\n        for (int i = 0; i < m; ++i) {\n            int left = 0, right = n;\n            // calculate L(i, j) from left to right\n            for (int j = 0; j < n; ++j) {\n                if (matrix[i][j] == '1') {\n                    ++H[j];\n                    L[j] = max(L[j], left);\n                } else {\n                    left = j+1;\n                    H[j] = 0; L[j] = 0; R[j] = n;\n                }\n            }\n            // calculate R(i, j) from right to left\n            for (int j = n-1; j >= 0; --j) {\n                if (matrix[i][j] == '1') {\n                    R[j] = min(R[j], right);\n                    ret = max(ret, H[j]*(R[j]-L[j]));\n                } else {\n                    right = j;\n                }\n            }\n        }\n        return ret;\n    }\n};\n")))))}f.isMDXComponent=!0}}]);
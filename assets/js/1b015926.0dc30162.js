"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[5375],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,h=m["".concat(i,".").concat(d)]||m[d]||p[d]||l;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294),a=r(6010);const l="tabItem_Ymn6";function o(e){let{children:t,hidden:r,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(7462),a=r(7294),l=r(6010),o=r(2389),u=r(7392),i=r(7094),s=r(2466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){var t;const{lazy:r,block:o,defaultValue:m,values:d,groupId:h,className:f}=e,v=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=d??v.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),y=(0,u.l)(b,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===m?m:m??(null==(t=v.find((e=>e.props.default)))?void 0:t.props.value)??v[0].props.value;if(null!==g&&!b.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:k,setTabGroupChoices:O}=(0,i.U)(),[w,T]=(0,a.useState)(g),N=[],{blockElementScrollPositionUntilNextRender:P}=(0,s.o5)();if(null!=h){const e=k[h];null!=e&&e!==w&&b.some((t=>t.value===e))&&T(e)}const E=e=>{const t=e.currentTarget,r=N.indexOf(t),n=b[r].value;n!==w&&(P(t),T(n),null!=h&&O(h,String(n)))},S=e=>{var t;let r=null;switch(e.key){case"ArrowRight":{const t=N.indexOf(e.currentTarget)+1;r=N[t]??N[0];break}case"ArrowLeft":{const t=N.indexOf(e.currentTarget)-1;r=N[t]??N[N.length-1];break}}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},f)},b.map((e=>{let{value:t,label:r,attributes:o}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>N.push(e),onKeyDown:S,onFocus:E,onClick:E},o,{className:(0,l.Z)("tabs__item",p,null==o?void 0:o.className,{"tabs__item--active":w===t})}),r??t)}))),r?(0,a.cloneElement)(v.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,o.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}},2621:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>u,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),l=r(5488),o=r(5162);const u={title:"Path Sum"},i=void 0,s={unversionedId:"binary-tree/recursion/path-sum",id:"binary-tree/recursion/path-sum",title:"Path Sum",description:"\u63cf\u8ff0",source:"@site/docs/binary-tree/recursion/path-sum.md",sourceDirName:"binary-tree/recursion",slug:"/binary-tree/recursion/path-sum",permalink:"/binary-tree/recursion/path-sum",draft:!1,tags:[],version:"current",frontMatter:{title:"Path Sum"},sidebar:"docs",previous:{title:"Maximum Depth of Binary Tree",permalink:"/binary-tree/recursion/maximum-depth-of-binary-tree"},next:{title:"Path Sum II",permalink:"/binary-tree/recursion/path-sum-ii"}},c={},p=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],m={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.kt)("p",null,"Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum."),(0,a.kt)("p",null,"For example:\nGiven the below binary tree and ",(0,a.kt)("inlineCode",{parentName:"p"},"sum = 22"),","),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"          5\n         / \\\n        4   8\n       /   / \\\n      11  13  4\n     /  \\      \\\n    7    2      1\n")),(0,a.kt)("p",null,"return true, as there exist a root-to-leaf path ",(0,a.kt)("inlineCode",{parentName:"p"},"5->4->11->2")," which sum is 22."),(0,a.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.kt)("p",null,"\u9898\u76ee\u53ea\u8981\u6c42\u8fd4\u56de",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"\u6216\u8005",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u8bb0\u5f55\u8def\u5f84\u3002"),(0,a.kt)("p",null,"\u7531\u4e8e\u53ea\u9700\u8981\u6c42\u51fa\u4e00\u4e2a\u7ed3\u679c\uff0c\u56e0\u6b64\uff0c\u5f53\u5de6\u3001\u53f3\u4efb\u610f\u4e00\u68f5\u5b50\u6811\u6c42\u5230\u4e86\u6ee1\u610f\u7ed3\u679c\uff0c\u90fd\u53ef\u4ee5\u53ca\u65f6 return\u3002"),(0,a.kt)("p",null,"\u7531\u4e8e\u9898\u76ee\u6ca1\u6709\u8bf4\u8282\u70b9\u7684\u6570\u636e\u4e00\u5b9a\u662f\u6b63\u6574\u6570\uff0c\u5fc5\u987b\u8981\u8d70\u5230\u53f6\u5b50\u8282\u70b9\u624d\u80fd\u5224\u65ad\uff0c\u56e0\u6b64\u4e2d\u9014\u6ca1\u6cd5\u526a\u679d\uff0c\u53ea\u80fd\u8fdb\u884c\u6734\u7d20\u6df1\u641c\u3002"),(0,a.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.kt)(l.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Path Sum\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\npublic class Solution {\n    public boolean hasPathSum(TreeNode root, int sum) {\n        if (root == null) return false;\n\n        if (root.left == null && root.right == null) // leaf\n            return sum == root.val;\n\n        return hasPathSum(root.left, sum - root.val)\n                || hasPathSum(root.right, sum - root.val);\n    }\n}\n"))),(0,a.kt)(o.Z,{value:"cpp",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// Path Sum\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(logn)\nclass Solution {\npublic:\n    bool hasPathSum(TreeNode *root, int sum) {\n        if (root == nullptr) return false;\n\n        if (root->left == nullptr && root->right == nullptr) // leaf\n            return sum == root->val;\n\n        return hasPathSum(root->left, sum - root->val)\n                || hasPathSum(root->right, sum - root->val);\n    }\n};\n")))),(0,a.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/binary-tree/recursion/path-sum-ii"},"Path Sum II"))))}d.isMDXComponent=!0}}]);
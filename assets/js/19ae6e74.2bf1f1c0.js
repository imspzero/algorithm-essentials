"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[674],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=o(n),d=r,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||l;return n?a.createElement(k,s(s({ref:t},m),{},{components:n})):a.createElement(k,s({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=c;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var o=2;o<l;o++)s[o]=n[o];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const l="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),r=n(7294),l=n(6010),s=n(2389),i=n(7392),p=n(7094),o=n(2466);const m="tabList__CuJ",u="tabItem_LNqP";function c(e){var t;const{lazy:n,block:s,defaultValue:c,values:d,groupId:k,className:N}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=d??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),f=(0,i.l)(v,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===c?c:c??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==y&&!v.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:g}=(0,p.U)(),[w,C]=(0,r.useState)(y),L=[],{blockElementScrollPositionUntilNextRender:x}=(0,o.o5)();if(null!=k){const e=b[k];null!=e&&e!==w&&v.some((t=>t.value===e))&&C(e)}const O=e=>{const t=e.currentTarget,n=L.indexOf(t),a=v[n].value;a!==w&&(x(t),C(a),null!=k&&g(k,String(a)))},M=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=L.indexOf(e.currentTarget)+1;n=L[t]??L[0];break}case"ArrowLeft":{const t=L.indexOf(e.currentTarget)-1;n=L[t]??L[L.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":s},N)},v.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>L.push(e),onKeyDown:M,onFocus:O,onClick:O},s,{className:(0,l.Z)("tabs__item",u,null==s?void 0:s.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,r.cloneElement)(h.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function d(e){const t=(0,s.Z)();return r.createElement(c,(0,a.Z)({key:String(t)},e))}},8381:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905)),l=n(5488),s=n(5162);const i={title:"LFU Cache"},p=void 0,o={unversionedId:"linked-list/lfu-cache",id:"linked-list/lfu-cache",title:"LFU Cache",description:"\u63cf\u8ff0",source:"@site/docs/linked-list/lfu-cache.md",sourceDirName:"linked-list",slug:"/linked-list/lfu-cache",permalink:"/linked-list/lfu-cache",draft:!1,tags:[],version:"current",frontMatter:{title:"LFU Cache"},sidebar:"docs",previous:{title:"LRU Cache",permalink:"/linked-list/lru-cache"},next:{title:"All O(1) Data Structure",permalink:"/linked-list/all-o1-data-structure"}},m={},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Design and implement a data structure for ",(0,r.kt)("inlineCode",{parentName:"p"},"Least Frequently Used (LFU)")," cache."),(0,r.kt)("p",null,"Implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"LFUCache")," class:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"LFUCache(int capacity)")," Initializes the object with the ",(0,r.kt)("inlineCode",{parentName:"li"},"capacity")," of the data structure."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"int get(int key)")," Gets the value of the ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," if the ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," exists in the cache. Otherwise, returns ",(0,r.kt)("inlineCode",{parentName:"li"},"-1"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"void put(int key, int value)")," Sets or inserts the value if the ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," is not already present. When the cache reaches its ",(0,r.kt)("inlineCode",{parentName:"li"},"capacity"),", it should invalidate the least frequently used item before inserting a new item. For this problem, when there is a tie (i.e., two or more keys with the same frequency), the ",(0,r.kt)("strong",{parentName:"li"},"least recently")," used ",(0,r.kt)("inlineCode",{parentName:"li"},"key")," would be evicted.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Notice that")," the number of times an item is used is the number of calls to the ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"put")," functions for that item since it was inserted. This number is set to zero when the item is removed."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example 1"),":"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Input"),":",(0,r.kt)("br",{parentName:"p"}),"\n",'["LFUCache", "put", "put", "get", "put", "get", "get", "put", "get", "get", "get"]',"[2]",", ","[1, 1]",", ","[2, 2]",", ","[1]",", ","[3, 3]",", ","[2]",", ","[3]",", ","[4, 4]",", ","[1]",", ","[3]",", ","[4]","]",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Output"),":",(0,r.kt)("br",{parentName:"p"}),"\n","[null, null, null, 1, null, -1, 3, null, -1, 3, 4]"),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Explanation"),":",(0,r.kt)("br",{parentName:"p"}),"\n","LFUCache lfu = new LFUCache(2);",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.put(1, 1);",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.put(2, 2);",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.get(1); // return 1",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.put(3, 3); // evicts key 2",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.get(2); // return -1 (not found)",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.get(3); // return 3",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.put(4, 4); // evicts key 1.",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.get(1); // return -1 (not found)",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.get(3); // return 3",(0,r.kt)("br",{parentName:"p"}),"\n","lfu.get(4); // return 4")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Constraints"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"0 <= capacity, key, value <= ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mn",{parentName:"msup"},"0"),(0,r.kt)("mn",{parentName:"msup"},"4"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"10^4")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"4"))))))))))))),(0,r.kt)("li",{parentName:"ul"},"At most ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mn",{parentName:"mrow"},"1"),(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mn",{parentName:"msup"},"0"),(0,r.kt)("mn",{parentName:"msup"},"5"))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"10^5")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8141em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},"1"),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord"},"0"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.8141em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.063em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"2.7em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"5"))))))))))))," calls will be made to get and put.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Follow up"),": Could you do both operations in ",(0,r.kt)("inlineCode",{parentName:"p"},"O(1)")," time complexity?"),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"int get(int key)")," \u9700\u8981 O(1)\uff0c\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"HashMap<Integer, Node> nodeMap"),"\uff0c\u7531 key \u6307\u5411",(0,r.kt)("inlineCode",{parentName:"p"},"Node"),"\u8282\u70b9\uff0c\u8fd9\u4e2a\u8282\u70b9\u91cc\u5305\u542b\u5b83\u7684\u503c",(0,r.kt)("inlineCode",{parentName:"p"},"value"),"\u548c\u9891\u7387",(0,r.kt)("inlineCode",{parentName:"p"},"count"),"\u7b49\u4fe1\u606f\u3002"),(0,r.kt)("p",null,"\u5f53\u7f13\u5b58\u5230\u8fbe\u6700\u5927\u5bb9\u91cf\u65f6\uff0c\u9700\u8981\u628a\u8bbf\u95ee\u9891\u7387\u6700\u4f4e\u7684\u5143\u7d20\u5f39\u51fa\u53bb\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u6574\u6570\u53d8\u91cf",(0,r.kt)("inlineCode",{parentName:"p"},"min"),"\uff0c\u6765\u8bb0\u5f55\u6700\u5c0f\u7684\u9891\u7387\u3002\u8fd8\u9700\u8981\u4e00\u79cd O(1)\u7684\u65b9\u6cd5\uff0c\u80fd\u591f\u6839\u636e",(0,r.kt)("inlineCode",{parentName:"p"},"min"),"\u7684\u503c\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u5143\u7d20\u5217\u8868\uff0c\u8fd9\u4e9b\u5143\u7d20\u7684\u8bbf\u95ee\u9891\u7387\u90fd\u7b49\u4e8e",(0,r.kt)("inlineCode",{parentName:"p"},"min"),"\uff0c\u56e0\u6b64\u6700\u4f73\u65b9\u6cd5\u662f\u7528\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"HashMap<Integer, DList> countMap"),"\uff0c\u628a\u9891\u7387\u6620\u5c04\u5230\u53cc\u5411\u94fe\u8868\u3002\u4e3a\u5565\u7528\u53cc\u5411\u94fe\u8868\uff1f\u56e0\u4e3a\u6bcf\u6b21\u8bbf\u95ee\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"\uff0c\u8fd9\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"\u7684\u9891\u7387\u5c31\u4f1a\u589e 1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u9700\u8981\u4ece\u65e7\u7684\u5217\u8868\u6458\u9664\uff0c\u63d2\u5165\u5230\u65b0\u7684\u5217\u8868\uff0c\u8fd9\u79cd\u9700\u8981\u9891\u7e41\u63d2\u5165\uff0c\u5220\u9664\u7684\u573a\u666f\uff0c\u663e\u7136\u9002\u5408\u7528\u53cc\u5411\u94fe\u8868\u3002"),(0,r.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.kt)("p",null,"\u672c\u9898\u6bd4 ",(0,r.kt)("a",{parentName:"p",href:"/linked-list/lru-cache"},"LRU Cache")," \u66f4\u590d\u6742\uff0c\u4f46\u5927\u4f53\u4e0a\u662f\u7c7b\u4f3c\u7684\u3002"),(0,r.kt)(l.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// LFU Cache\n// Two HashMap + Doubly Linked List\npublic class LFUCache {\n    int capacity, size;\n    int min; // keep track of the minimum frequency\n    Map<Integer, Node> nodeMap; // key -> Node\n    Map<Integer, DList> countMap; // count -> DList\n\n    public LFUCache(int capacity) {\n        this.capacity = capacity;\n        nodeMap = new HashMap<>();\n        countMap = new HashMap<>();\n    }\n\n    // Time Complexity: O(1)\n    public int get(int key) {\n        Node node = nodeMap.get(key);\n        if (node == null) return -1;\n        update(node);\n        return node.value;\n    }\n\n    // Time Complexity: O(1)\n    public void put(int key, int value) {\n        if (capacity == 0) return;\n        Node node;\n        if (nodeMap.containsKey(key)) {\n            node = nodeMap.get(key);\n            node.value = value;\n            update(node);\n        } else {\n            node = new Node(key, value);\n            nodeMap.put(key, node);\n            if (size == capacity) {\n                DList lastList = countMap.get(min);\n                nodeMap.remove(lastList.pollLast().key);\n                size--;\n            }\n            size++;\n            min = 1; // reset min to 1\n            DList newList = countMap.getOrDefault(node.count, new DList());\n            newList.offerFirst(node);\n            countMap.put(node.count, newList);\n        }\n    }\n\n    // Increase count in countMap\n    private void update(Node node) {\n        DList oldList = countMap.get(node.count);\n        oldList.remove(node);\n        // Make min point to another list\n        if (node.count == min && oldList.size == 0) min++;\n\n        node.count++;\n        DList newList = countMap.getOrDefault(node.count, new DList());\n        newList.offerFirst(node);\n        countMap.put(node.count, newList);\n    }\n\n    // Node of doubly linked list\n    static class Node {\n        int key, value, count;\n        Node prev, next;\n        Node(int key, int value) {\n            this.key = key;\n            this.value = value;\n            count = 1;\n        }\n    }\n\n    // Doubly linked list\n    static class DList {\n        Node head, tail;\n        int size;\n\n        DList() {\n            // head and tail are two dummy nodes\n            head = new Node(0, 0);\n            tail = new Node(0, 0);\n            head.next = tail;\n            tail.prev = head;\n        }\n\n        void offerFirst(Node node) {\n            head.next.prev = node;\n            node.next = head.next;\n            node.prev = head;\n            head.next = node;\n            size++;\n        }\n\n        // Remove a node in the middle\n        void remove(Node node) {\n            if (node == null) return;\n            node.prev.next = node.next;\n            node.next.prev = node.prev;\n            size--;\n        }\n\n        // Remove the tail node\n        Node pollLast() {\n            Node last = tail.prev;\n            remove(last);\n            return last;\n        }\n    }\n}\n"))),(0,r.kt)(s.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// TODO\n")))),(0,r.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/linked-list/lru-cache"},"LRU Cache"))))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[356],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>d});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(t),d=i,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6370:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const a={title:"Contains Duplicate II"},l=void 0,o={unversionedId:"linear-list/array/contains-duplicate-ii",id:"linear-list/array/contains-duplicate-ii",title:"Contains Duplicate II",description:"\u63cf\u8ff0",source:"@site/docs/linear-list/array/contains-duplicate-ii.md",sourceDirName:"linear-list/array",slug:"/linear-list/array/contains-duplicate-ii",permalink:"/linear-list/array/contains-duplicate-ii",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/linear-list/array/contains-duplicate-ii.md",tags:[],version:"current",frontMatter:{title:"Contains Duplicate II"},sidebar:"someSidebar",previous:{title:"Contains Duplicate",permalink:"/linear-list/array/contains-duplicate"},next:{title:"Contains Duplicate III",permalink:"/linear-list/array/contains-duplicate-iii"}},p={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],s={toc:c};function u(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,i.kt)("p",null,"Given an array of integers and an integer ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),", find out whether there are two distinct indices ",(0,i.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"j")," in the array such that ",(0,i.kt)("inlineCode",{parentName:"p"},"nums[i] = nums[j]")," and the difference between ",(0,i.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"j")," is at most ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),"."),(0,i.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,i.kt)("p",null,"\u7ef4\u62a4\u4e00\u4e2a HashMap, key \u4e3a\u6574\u6570\uff0cvalue \u4e3a\u4e0b\u6807\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e0d\u65ad\u6dfb\u52a0\u8fdb\u8fd9\u4e2a HashMap, \u78b0\u5230\u91cd\u590d\u65f6\uff0c\u8ba1\u7b97\u4e8c\u8005\u7684\u4e0b\u6807\u8ddd\u79bb\uff0c\u5982\u679c\u8ddd\u79bb\u5c0f\u4e8e\u6216\u7b49\u4e8e k\uff0c\u5219\u8fd4\u56de true, \u5982\u679c\u76f4\u5230\u6570\u7ec4\u626b\u63cf\u5b8c\uff0c\u8ddd\u79bb\u90fd\u5927\u4e8e k\uff0c\u5219\u8fd4\u56de false\u3002"),(0,i.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// Contains Duplicate II\n// Time Complexity: O(n), Space Complexity: O(n)\npublic class Solution {\n    public boolean containsNearbyDuplicate(int[] nums, int k) {\n        final Map<Integer, Integer> map = new HashMap<>();\n        int min = Integer.MAX_VALUE;\n\n        for(int i = 0; i < nums.length; i++){\n            if(map.containsKey(nums[i])){\n                final int preIndex = map.get(nums[i]);\n                final int gap = i - preIndex;\n                min = Math.min(min, gap);\n            }\n            map.put(nums[i], i);\n        }\n        return min <= k;\n    }\n}\n")))}u.isMDXComponent=!0}}]);
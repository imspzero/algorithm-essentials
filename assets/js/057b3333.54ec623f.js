"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4932],{3905:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>d});var n=t(7294);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function u(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var o=n.createContext({}),s=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},i=function(e){var a=s(e.components);return n.createElement(o.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),m=s(t),d=l,v=m["".concat(o,".").concat(d)]||m[d]||c[d]||r;return t?n.createElement(v,p(p({ref:a},i),{},{components:t})):n.createElement(v,p({ref:a},i))}));function d(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,p=new Array(r);p[0]=m;var u={};for(var o in a)hasOwnProperty.call(a,o)&&(u[o]=a[o]);u.originalType=e,u.mdxType="string"==typeof e?e:l,p[1]=u;for(var s=2;s<r;s++)p[s]=t[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5162:(e,a,t)=>{t.d(a,{Z:()=>p});var n=t(7294),l=t(6010);const r="tabItem_Ymn6";function p(e){let{children:a,hidden:t,className:p}=e;return n.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,p),hidden:t},a)}},5488:(e,a,t)=>{t.d(a,{Z:()=>d});var n=t(7462),l=t(7294),r=t(6010),p=t(2389),u=t(7392),o=t(7094),s=t(2466);const i="tabList__CuJ",c="tabItem_LNqP";function m(e){var a;const{lazy:t,block:p,defaultValue:m,values:d,groupId:v,className:y}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=d??h.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),b=(0,u.l)(k,((e,a)=>e.value===a.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===m?m:m??(null==(a=h.find((e=>e.props.default)))?void 0:a.props.value)??h[0].props.value;if(null!==g&&!k.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:T}=(0,o.U)(),[x,N]=(0,l.useState)(g),q=[],{blockElementScrollPositionUntilNextRender:O}=(0,s.o5)();if(null!=v){const e=f[v];null!=e&&e!==x&&k.some((a=>a.value===e))&&N(e)}const I=e=>{const a=e.currentTarget,t=q.indexOf(a),n=k[t].value;n!==x&&(O(a),N(n),null!=v&&T(v,String(n)))},Z=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{const a=q.indexOf(e.currentTarget)+1;t=q[a]??q[0];break}case"ArrowLeft":{const a=q.indexOf(e.currentTarget)-1;t=q[a]??q[q.length-1];break}}null==(a=t)||a.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",i)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},y)},k.map((e=>{let{value:a,label:t,attributes:p}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===a?0:-1,"aria-selected":x===a,key:a,ref:e=>q.push(e),onKeyDown:Z,onFocus:I,onClick:I},p,{className:(0,r.Z)("tabs__item",c,null==p?void 0:p.className,{"tabs__item--active":x===a})}),t??a)}))),t?(0,l.cloneElement)(h.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==x})))))}function d(e){const a=(0,p.Z)();return l.createElement(m,(0,n.Z)({key:String(a)},e))}},2124:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>o,default:()=>d,frontMatter:()=>u,metadata:()=>s,toc:()=>c});var n=t(7462),l=(t(7294),t(3905)),r=t(5488),p=t(5162);const u={title:"\u6700\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784"},o=void 0,s={unversionedId:"data-structures",id:"data-structures",title:"\u6700\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784",description:"\u5b9a\u957f\u6570\u7ec4",source:"@site/docs/data-structures.md",sourceDirName:".",slug:"/data-structures",permalink:"/data-structures",draft:!1,tags:[],version:"current",frontMatter:{title:"\u6700\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784"},sidebar:"docs",previous:{title:"Sparse Matrix Multiplication",permalink:"/simulation/sparse-matrix-multiplication"},next:{title:"Java\u96c6\u5408\u6846\u67b6\u5c42\u6b21\u7ed3\u6784\u56fe",permalink:"/java-collection"}},i={},c=[{value:"\u5b9a\u957f\u6570\u7ec4",id:"\u5b9a\u957f\u6570\u7ec4",level:3},{value:"\u52a8\u6001\u6570\u7ec4",id:"\u52a8\u6001\u6570\u7ec4",level:3},{value:"\u5355\u94fe\u8868",id:"\u5355\u94fe\u8868",level:3},{value:"\u53cc\u5411\u94fe\u8868",id:"\u53cc\u5411\u94fe\u8868",level:3},{value:"\u6808",id:"\u6808",level:3},{value:"\u961f\u5217",id:"\u961f\u5217",level:3},{value:"\u4f18\u5148\u961f\u5217\uff08\u5806\uff09",id:"\u4f18\u5148\u961f\u5217\u5806",level:3},{value:"HashMap",id:"hashmap",level:3},{value:"HashSet",id:"hashset",level:3}],m={toc:c};function d(e){let{components:a,...t}=e;return(0,l.kt)("wrapper",(0,n.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"\u5b9a\u957f\u6570\u7ec4"},"\u5b9a\u957f\u6570\u7ec4"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"arr = [0] * 10\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"int[] arr = new int[10];\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> arr(10);\n")))),(0,l.kt)("h3",{id:"\u52a8\u6001\u6570\u7ec4"},"\u52a8\u6001\u6570\u7ec4"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"l = []\n# Add a new element at tail\nl.append(1)\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"List<Integer> l = new ArrayList<>();\n// Add a new element at tail\nl.add(1);\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> l;\n// Add a new element at tail\nl.push_back(1);\n")))),(0,l.kt)("h3",{id:"\u5355\u94fe\u8868"},"\u5355\u94fe\u8868"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# To mimic singly linked list, always operate at head\nl = deque()\n# insert at head, time complexity O(1)\nl.appendleft(7)\n# access head, time complexity O(1)\nl[0]\n# remove head, time complexity O(1)\nl.popleft()\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// LinkedList is actually a doubly-linked list, to mimic singly linked list, always operate at head\nLinkedList<Integer> l = new LinkedList<>();\n// insert at head, time complexity O(1)\nl.offerFirst(7)\n// access head, time complexity O(1)\nl.peekFirst()\n// remove head, time complexity O(1)\nl.pollFirst()\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// std::list uses std::deque by default, to mimic singly linked list, always operate at head\nlist<int> l;\n// insert at head, time complexity O(1)\nl.push_front(7);\n// access head, time complexity O(1)\nl.front();\n// remove head, time complexity O(1)\nl.pop_front();\n")))),(0,l.kt)("h3",{id:"\u53cc\u5411\u94fe\u8868"},"\u53cc\u5411\u94fe\u8868"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"q = deque()\n# insert at tail, time complexity O(1)\nq.push(7)\n# access tail, time complexity O(1)\nq[-1]\n# remove tail, time complexity O(1)\nq.pop()\n# insert at head, time complexity O(1)\nq.pushleft(7)\n# access head, time complexity O(1)\nq[0]\n# remove head, time complexity O(1)\nq.popleft()\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Deque<Integer> q = new ArrayDeque<>();\n// insert at tail, time complexity O(1)\nq.offerLast(7)\n// access tail, time complexity O(1)\nq.peekLast()\n// remove tail, time complexity O(1)\nq.pollLast()\n// insert at head, time complexity O(1)\nq.offerFirst(7)\n// access head, time complexity O(1)\nq.peekFirst()\n// remove head, time complexity O(1)\nq.pollFirst()\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"deque<int> q;\n// insert at tail, time complexity O(1)\nq.push_back(7)\n// access tail, time complexity O(1)\nq.back()\n// remove tail, time complexity O(1)\nq.pop_back()\n// insert at head, time complexity O(1)\nq.push_front(7)\n// access head, time complexity O(1)\nq.front()\n// remove head, time complexity O(1)\nq.pop_front()\n")))),(0,l.kt)("h3",{id:"\u6808"},"\u6808"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# To mimic stack, always operate at tail\ns = deque()\ns.append(7)\ns[-1]\ns.pop()\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Stack<Integer> s = new Stack<>();\ns.push(7)\ns.peek();\ns.pop()\ns.empty()\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"stack<int>  s;\ns.push(7)\ns.top();\ns.pop()\n")))),(0,l.kt)("h3",{id:"\u961f\u5217"},"\u961f\u5217"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# To mimic a FIFO queue, push at tail, pop at head\nq = deque()\nq.append(7)\nq[0]\nq.popleft()\nlen(q) == 0\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Queue<Integer> q = new LinkedList<>();\nq.offer(7);\nq.peek();\nq.poll();\nq.isEmpty();\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"queue<int> q;\ns.push_back(7)\ns.front();\ns.pop_front();\ns.empty()\n")))),(0,l.kt)("h3",{id:"\u4f18\u5148\u961f\u5217\u5806"},"\u4f18\u5148\u961f\u5217\uff08\u5806\uff09"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# min heap by default\npq = []\nheapq.heappush(pq, 7)\npq[0]\nheapq.heappop(pq)\nlen(pq) == 0\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// min heap by default\nPriorityQueue<Integer> pq = new PriorityQueue<>();\npq.offer(7);\npq.peek();\npq.poll();\npq.isEmpty();\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// max heap by default\npriority_queue<int> pq;\npq.push(7)\npq.top();\npq.pop();\npq.empty()\n")))),(0,l.kt)("h3",{id:"hashmap"},"HashMap"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"m = {}\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Map<String, Integer> m = new HashMap<>();\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"unordered_map<string, int> m;\n")))),(0,l.kt)("h3",{id:"hashset"},"HashSet"),(0,l.kt)(r.Z,{defaultValue:"python",groupId:"data-structures",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,l.kt)(p.Z,{value:"python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"s = set()\n"))),(0,l.kt)(p.Z,{value:"java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Set<Integer> m = new HashSet<>();\n"))),(0,l.kt)(p.Z,{value:"cpp",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"unordered_set<int> s;\n")))))}d.isMDXComponent=!0}}]);
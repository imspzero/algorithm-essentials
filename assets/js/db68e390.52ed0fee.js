"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[4543],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},m=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,g=p["".concat(i,".").concat(d)]||p[d]||c[d]||l;return t?a.createElement(g,s(s({ref:n},m),{},{components:t})):a.createElement(g,s({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,s=new Array(l);s[0]=p;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var u=2;u<l;u++)s[u]=t[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(7294),r=t(6010);const l="tabItem_Ymn6";function s(e){let{children:n,hidden:t,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,s),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>d});var a=t(7462),r=t(7294),l=t(6010),s=t(2389),o=t(7392),i=t(7094),u=t(2466);const m="tabList__CuJ",c="tabItem_LNqP";function p(e){var n,t;const{lazy:s,block:p,defaultValue:d,values:g,groupId:v,className:h}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=g?g:f.map((e=>{let{props:{value:n,label:t,attributes:a}}=e;return{value:n,label:t,attributes:a}})),b=(0,o.l)(y,((e,n)=>e.value===n.value));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===d?d:null!=(n=null!=d?d:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?n:f[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:N,setTabGroupChoices:w}=(0,i.U)(),[O,x]=(0,r.useState)(k),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=v){const e=N[v];null!=e&&e!==O&&y.some((n=>n.value===e))&&x(e)}const j=e=>{const n=e.currentTarget,t=C.indexOf(n),a=y[t].value;a!==O&&(T(n),x(a),null!=v&&w(v,String(a)))},S=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var a;const n=C.indexOf(e.currentTarget)+1;t=null!=(a=C[n])?a:C[0];break}case"ArrowLeft":{var r;const n=C.indexOf(e.currentTarget)-1;t=null!=(r=C[n])?r:C[C.length-1];break}}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",m)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},h)},y.map((e=>{let{value:n,label:t,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:e=>C.push(e),onKeyDown:S,onFocus:j,onClick:j},s,{className:(0,l.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),s?(0,r.cloneElement)(f.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==O})))))}function d(e){const n=(0,s.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},7667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var a=t(7462),r=(t(7294),t(3905)),l=t(5488),s=t(5162);const o={title:"Longest Consecutive Sequence"},i=void 0,u={unversionedId:"linear-list/array/longest-consecutive-sequence",id:"linear-list/array/longest-consecutive-sequence",title:"Longest Consecutive Sequence",description:"\u63cf\u8ff0",source:"@site/docs/linear-list/array/longest-consecutive-sequence.md",sourceDirName:"linear-list/array",slug:"/linear-list/array/longest-consecutive-sequence",permalink:"/linear-list/array/longest-consecutive-sequence",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/linear-list/array/longest-consecutive-sequence.md",tags:[],version:"current",frontMatter:{title:"Longest Consecutive Sequence"},sidebar:"someSidebar",previous:{title:"Remove Duplicates from Sorted Array II",permalink:"/linear-list/array/remove-duplicates-from-sorted-array-ii"},next:{title:"2Sum",permalink:"/linear-list/array/2sum"}},m={},c=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Given an unsorted array of integers, find the length of the longest consecutive elements sequence."),(0,r.kt)("p",null,"For example,\nGiven ",(0,r.kt)("inlineCode",{parentName:"p"},"[100, 4, 200, 1, 3, 2]"),",\nThe longest consecutive elements sequence is ",(0,r.kt)("inlineCode",{parentName:"p"},"[1, 2, 3, 4]"),". Return its length: 4."),(0,r.kt)("p",null,"Your algorithm should run in ",(0,r.kt)("inlineCode",{parentName:"p"},"O(n)")," complexity."),(0,r.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,r.kt)("p",null,"\u5982\u679c\u5141\u8bb8",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mi",{parentName:"mrow"},"log"),(0,r.kt)("mo",{parentName:"mrow"},"\u2061"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n \\log n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.kt)("span",{parentName:"span",className:"mop"},"lo",(0,r.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))),"\u7684\u590d\u6742\u5ea6\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u6392\u5e8f\uff0c\u53ef\u662f\u672c\u9898\u8981\u6c42",(0,r.kt)("inlineCode",{parentName:"p"},"O(n)"),"\u3002"),(0,r.kt)("p",null,"\u7531\u4e8e\u5e8f\u5217\u91cc\u7684\u5143\u7d20\u662f\u65e0\u5e8f\u7684\uff0c\u53c8\u8981\u6c42",(0,r.kt)("inlineCode",{parentName:"p"},"O(n)"),"\uff0c\u9996\u5148\u8981\u60f3\u5230\u7528\u54c8\u5e0c\u8868\u3002"),(0,r.kt)("p",null,"\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u5b58\u50a8\u6240\u6709\u51fa\u73b0\u8fc7\u7684\u5143\u7d20\uff0c\u5bf9\u6bcf\u4e2a\u5143\u7d20\uff0c\u4ee5\u8be5\u5143\u7d20\u4e3a\u4e2d\u5fc3\uff0c\u5f80\u5de6\u53f3\u6269\u5f20\uff0c\u76f4\u5230\u4e0d\u8fde\u7eed\u4e3a\u6b62\uff0c\u8bb0\u5f55\u4e0b\u6700\u957f\u7684\u957f\u5ea6\u3002"),(0,r.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,r.kt)(l.Z,{defaultValue:"python",values:[{label:"Python",value:"python"},{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"# Longest Consecutive Sequence\n# Time Complexity: O(n)\uff0cSpace Complexity: O(n)\nclass Solution:\n    def longestConsecutive(self, nums: List[int]) -> int:\n        s = set(nums)\n        longest = 0\n\n        for num in s:\n            if num-1 not in s:\n                current_num = num\n                length = 1\n\n                while current_num+1 in s:\n                    current_num += 1\n                    length +=1\n\n                longest = max(longest, length)\n\n        return longest\n"))),(0,r.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Longest Consecutive Sequence\n// Time Complexity: O(n)\uff0cSpace Complexity: O(n)\nclass Solution {\n    public int longestConsecutive(int[] nums) {\n        Set<Integer> s = new HashSet<Integer>();\n        for (int num : nums) {\n            s.add(num);\n        }\n\n        int longest = 0;\n\n        for (int num : s) {\n            if (!s.contains(num-1)) {\n                int currentNum = num;\n                int length = 1;\n\n                while (s.contains(currentNum+1)) {\n                    currentNum += 1;\n                    length += 1;\n                }\n\n                longest = Math.max(longest, length);\n            }\n        }\n\n        return longest;\n    }\n}\n"))),(0,r.kt)(s.Z,{value:"cpp",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Longest Consecutive Sequence\n// Time Complexity: O(n)\uff0cSpace Complexity: O(n)\nclass Solution {\npublic:\n    int longestConsecutive(const vector<int> &nums) {\n        unordered_set<int> my_set;\n        for (auto i : nums) my_set.insert(i);\n\n        int longest = 0;\n        for (auto i : nums) {\n            int length = 1;\n            for (int j = i - 1; my_set.find(j) != my_set.end(); --j) {\n                my_set.erase(j);\n                ++length;\n            }\n            for (int j = i + 1; my_set.find(j) != my_set.end(); ++j) {\n                my_set.erase(j);\n                ++length;\n            }\n            longest = max(longest, length);\n        }\n        return longest;\n    }\n};\n")))))}d.isMDXComponent=!0}}]);
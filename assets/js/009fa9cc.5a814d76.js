"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[309],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),o=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=o(e.components);return r.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=o(n),d=a,f=c["".concat(m,".").concat(d)]||c[d]||s[d]||i;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var u={};for(var m in t)hasOwnProperty.call(t,m)&&(u[m]=t[m]);u.originalType=e,u.mdxType="string"==typeof e?e:a,l[1]=u;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4051:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>s,frontMatter:()=>i,metadata:()=>u,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));const i={title:"Range Sum Query - Immutable"},l=void 0,u={unversionedId:"dp/range-sum-query-immutable",id:"dp/range-sum-query-immutable",title:"Range Sum Query - Immutable",description:"\u63cf\u8ff0",source:"@site/docs/dp/range-sum-query-immutable.md",sourceDirName:"dp",slug:"/dp/range-sum-query-immutable",permalink:"/dp/range-sum-query-immutable",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/dp/range-sum-query-immutable.md",tags:[],version:"current",frontMatter:{title:"Range Sum Query - Immutable"},sidebar:"someSidebar",previous:{title:"House Robber III",permalink:"/dp/house-robber-iii"},next:{title:"Range Sum Query 2D - Immutable",permalink:"/dp/range-sum-query-2d-immutable"}},m={},o=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],p={toc:o};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.kt)("p",null,"Given an integer array ",(0,a.kt)("inlineCode",{parentName:"p"},"nums"),", find the sum of the elements between indices ",(0,a.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"j")," (",(0,a.kt)("inlineCode",{parentName:"p"},"i \u2264 j"),"), inclusive."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example"),":"),(0,a.kt)("p",null,"Given ",(0,a.kt)("inlineCode",{parentName:"p"},"nums = [-2, 0, 3, -5, 2, -1]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sumRange(0, 2) -> 1\nsumRange(2, 5) -> -1\nsumRange(0, 5) -> -3\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You may assume that the array does not change."),(0,a.kt)("li",{parentName:"ul"},"There are many calls to sumRange function.")),(0,a.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.kt)("p",null,"\u4ee4\u72b6\u6001",(0,a.kt)("inlineCode",{parentName:"p"},"f[i]"),"\u4e3a0\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"i"),"\u5143\u7d20\u4e4b\u95f4\u7684\u548c\uff0c\u5219\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"f[i] = f[i-1] + nums[i]"),"\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"f[i]"),"\u672c\u8d28\u4e0a\u662f\u7d2f\u52a0\u548c\uff0c\u6709\u4e86",(0,a.kt)("inlineCode",{parentName:"p"},"f[i]"),"\uff0c\u5219\u8303\u56f4","[i,j]","\u4e4b\u95f4\u7684\u548c\u7b49\u4e8e",(0,a.kt)("inlineCode",{parentName:"p"},"f[j] - f[i-1]"),"\u3002"),(0,a.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Range Sum Query - Immutable\npublic class NumArray {\n    // Time Complexity: O(n), Space Complexity: O(1)\n    public NumArray(int[] nums) {\n        this.f = new int[nums.length];\n        int sum = 0;\n        for (int i = 0; i < nums.length; ++i) {\n            sum += nums[i];\n            f[i] = sum;\n        }\n    }\n\n    // Time Complexity: O(1), Space Complexity: O(1)\n    public int sumRange(int i, int j) {\n        return f[j] - (i == 0 ? 0 : f[i - 1]);\n    }\n    private final int[] f;\n}\n")),(0,a.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/dp/range-sum-query-2d-immutable"},"Range Sum Query 2D - Immutable")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/binary-tree/segment-tree/range-sum-query-mutable"},"Range Sum Query - Mmutable"))))}s.isMDXComponent=!0}}]);
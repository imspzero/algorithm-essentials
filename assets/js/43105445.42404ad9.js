"use strict";(self.webpackChunkalgorithm_essentials=self.webpackChunkalgorithm_essentials||[]).push([[3423],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},v={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=a,d=p["".concat(o,".").concat(m)]||p[m]||v[m]||l;return t?r.createElement(d,i(i({ref:n},c),{},{components:t})):r.createElement(d,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=p;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:(e,n,t)=>{t.d(n,{Z:()=>i});var r=t(7294),a=t(6010);const l="tabItem_Ymn6";function i(e){let{children:n,hidden:t,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,i),hidden:t},n)}},5488:(e,n,t)=>{t.d(n,{Z:()=>m});var r=t(7462),a=t(7294),l=t(6010),i=t(2389),s=t(7392),o=t(7094),u=t(2466);const c="tabList__CuJ",v="tabItem_LNqP";function p(e){var n,t;const{lazy:i,block:p,defaultValue:m,values:d,groupId:f,className:b}=e,h=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=d?d:h.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),w=(0,s.l)(y,((e,n)=>e.value===n.value));if(w.length>0)throw new Error('Docusaurus error: Duplicate values "'+w.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(n=null!=m?m:null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)?n:h[0].props.value;if(null!==g&&!y.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+y.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:I}=(0,o.U)(),[O,N]=(0,a.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:E}=(0,u.o5)();if(null!=f){const e=k[f];null!=e&&e!==O&&y.some((n=>n.value===e))&&N(e)}const j=e=>{const n=e.currentTarget,t=T.indexOf(n),r=y[t].value;r!==O&&(E(n),N(r),null!=f&&I(f,String(r)))},x=e=>{var n;let t=null;switch(e.key){case"ArrowRight":{var r;const n=T.indexOf(e.currentTarget)+1;t=null!=(r=T[n])?r:T[0];break}case"ArrowLeft":{var a;const n=T.indexOf(e.currentTarget)-1;t=null!=(a=T[n])?a:T[T.length-1];break}}null==(n=t)||n.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},b)},y.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:O===n?0:-1,"aria-selected":O===n,key:n,ref:e=>T.push(e),onKeyDown:x,onFocus:j,onClick:j},i,{className:(0,l.Z)("tabs__item",v,null==i?void 0:i.className,{"tabs__item--active":O===n})}),null!=t?t:n)}))),i?(0,a.cloneElement)(h.filter((e=>e.props.value===O))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==O})))))}function m(e){const n=(0,i.Z)();return a.createElement(p,(0,r.Z)({key:String(n)},e))}},9419:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>u,toc:()=>v});var r=t(7462),a=(t(7294),t(3905)),l=t(5488),i=t(5162);const s={title:"Insert Interval"},o=void 0,u={unversionedId:"simulation/insert-interval",id:"simulation/insert-interval",title:"Insert Interval",description:"\u63cf\u8ff0",source:"@site/docs/simulation/insert-interval.md",sourceDirName:"simulation",slug:"/simulation/insert-interval",permalink:"/simulation/insert-interval",draft:!1,editUrl:"https://github.com/soulmachine/algorithm-essentials/edit/master/docs/simulation/insert-interval.md",tags:[],version:"current",frontMatter:{title:"Insert Interval"},sidebar:"someSidebar",previous:{title:"Palindrome Number",permalink:"/simulation/palindrome-number"},next:{title:"Merge Intervals",permalink:"/simulation/merge-intervals"}},c={},v=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:3}],p={toc:v};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.kt)("p",null,"Given a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary)."),(0,a.kt)("p",null,"You may assume that the intervals were initially sorted according to their start times."),(0,a.kt)("p",null,"Example 1:\nGiven intervals ",(0,a.kt)("inlineCode",{parentName:"p"},"[1,3],[6,9]"),", insert and merge ",(0,a.kt)("inlineCode",{parentName:"p"},"[2,5]")," in as ",(0,a.kt)("inlineCode",{parentName:"p"},"[1,5],[6,9]"),"."),(0,a.kt)("p",null,"Example 2:\nGiven ",(0,a.kt)("inlineCode",{parentName:"p"},"[1,2],[3,5],[6,7],[8,10],[12,16]"),", insert and merge ",(0,a.kt)("inlineCode",{parentName:"p"},"[4,9]")," in as ",(0,a.kt)("inlineCode",{parentName:"p"},"[1,2],[3,10],[12,16]"),"."),(0,a.kt)("p",null,"This is because the new interval ",(0,a.kt)("inlineCode",{parentName:"p"},"[4,9]")," overlaps with ",(0,a.kt)("inlineCode",{parentName:"p"},"[3,5],[6,7],[8,10]"),"."),(0,a.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,a.kt)("p",null,"\u65e0"),(0,a.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,a.kt)(l.Z,{defaultValue:"java",values:[{label:"Java",value:"java"},{label:"C++",value:"cpp"}],mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"// Insert Interval\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\npublic class Solution {\n    public int[][] insert(int[][] intervals, int[] newInterval) {\n        ArrayList<int[]> list = new ArrayList<>(Arrays.asList(intervals));\n        insert(list, newInterval);\n        return list.toArray(new int[0][2]);\n    }\n\n    private void insert(ArrayList<int[]> intervals, int[] newInterval) {\n        for (int i = 0; i < intervals.size();) {\n            final int[] cur = intervals.get(i);\n            if (newInterval[1] < cur[0]) {\n                intervals.add(i, newInterval);\n                return;\n            } else if (newInterval[0] > cur[1]) {\n                ++i;\n            } else {\n                newInterval[0] = Math.min(newInterval[0], cur[0]);\n                newInterval[1] = Math.max(newInterval[1], cur[1]);\n                intervals.remove(i);\n            }\n        }\n        intervals.add(newInterval);\n    }\n}\n"))),(0,a.kt)(i.Z,{value:"cpp",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"// Insert Interval\n// \u65f6\u95f4\u590d\u6742\u5ea6O(n)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6O(1)\nclass Solution {\npublic:\n    vector<Interval> insert(vector<Interval> &intervals, Interval newInterval) {\n        vector<Interval>::iterator it = intervals.begin();\n        while (it != intervals.end()) {\n            if (newInterval.end < it->start) {\n                intervals.insert(it, newInterval);\n                return intervals;\n            } else if (newInterval.start > it->end) {\n                it++;\n                continue;\n            } else {\n                newInterval.start = min(newInterval.start, it->start);\n                newInterval.end = max(newInterval.end, it->end);\n                it = intervals.erase(it);\n            }\n        }\n        intervals.insert(intervals.end(), newInterval);\n        return intervals;\n    }\n};\n")))),(0,a.kt)("h3",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/simulation/merge-intervals"},"Merge Intervals"))))}m.isMDXComponent=!0}}]);